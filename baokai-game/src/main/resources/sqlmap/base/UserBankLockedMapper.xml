<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.winterframework.firefrog.fund.dao.vo.UserBankLocked">
	<resultMap id="UserBankLockedResult" type="com.winterframework.firefrog.fund.dao.vo.UserBankLocked">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="userBankLockedColumns">
	    <![CDATA[
	        	ID as id,
	        	USER_ID as userId,
	        	OVER_TIME as overTime,
	        	OPERATOR as operator
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.winterframework.firefrog.fund.dao.vo.UserBankLocked" 
			useGeneratedKeys="false" keyProperty="id" 
		 flushCache="true">
		 <selectKey resultType="long" order="BEFORE" keyProperty="id">
			SELECT SEQ_USER_BANK_LOCKED_ID.Nextval from dual
		</selectKey>
	    <![CDATA[
	        INSERT INTO
	        USER_BANK_LOCKED (
	        	ID ,
	        	USER_ID ,
	        	OVER_TIME ,
	        	OPERATOR
	        ) VALUES (
	        	#{id,javaType=long,jdbcType=DECIMAL} ,
	        	#{userId,javaType=long,jdbcType=DECIMAL} ,
	        	#{overTime,javaType=object,jdbcType=TIMESTAMP} ,
	        	#{operator,javaType=string,jdbcType=VARCHAR} 
	        )
	    ]]>	
	
		</insert>
	    
		<update id="update" parameterType="com.winterframework.firefrog.fund.dao.vo.UserBankLocked">
	    <![CDATA[
	        UPDATE USER_BANK_LOCKED SET
		        USER_ID = #{userId,javaType=long,jdbcType=DECIMAL} ,
		        OVER_TIME = #{overTime,javaType=object,jdbcType=TIMESTAMP} ,
		        OPERATOR = #{operator,javaType=string,jdbcType=VARCHAR}
	        WHERE 
		        ID = #{id} 
	    ]]>
		</update>
		
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from USER_BANK_LOCKED where
		        ID = #{id} 
	    ]]>
	    </delete>   
	    <select id="getById" parameterType="long" resultMap="UserBankLockedResult" flushCache="false">
			select <include refid="userBankLockedColumns" />
		    <![CDATA[
			    from USER_BANK_LOCKED 
		        where 
		        ID = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="UserBankLockedResult" flushCache="false">
			select <include refid="userBankLockedColumns" />
			    from USER_BANK_LOCKED 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	

	<sql id="userBankLockedDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="@Ognl@isNotEmpty(id)">
				and ID = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(userId)">
				and USER_ID = #{userId}
			</if>
	       <if test="@Ognl@isNotEmpty(overTime)">
				and OVER_TIME = #{overTime}
			</if>
			<if test="@Ognl@isNotEmpty(operator)">
				and OPERATOR = #{operator}
			</if>
		</where>
	</sql>
	
	<select id="getAll" resultMap="UserBankLockedResult"  flushCache="false">
    	select <include refid="userBankLockedColumns" />
	    from USER_BANK_LOCKED 

		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>	
	<select id="getCount" resultType="long">
        select count(*) from USER_BANK_LOCKED 
    </select>
    <select id="getCountByPage" resultType="long">
        select count(*) from USER_BANK_LOCKED 
		<include refid="userBankLockedDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="getByPage" resultMap="UserBankLockedResult">
    	select <include refid="userBankLockedColumns" />
	    from USER_BANK_LOCKED 
		<include refid="userBankLockedDynamicWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	<!-- 获取超时时间 -->
	<select id="getOverTimeByUserId"  parameterType="long" resultType="java.util.Date">
		select over_Time as overTime from User_Bank_Locked where user_id = #{userId}
	</select>
	
	<select id="getOverTimeByLockId" parameterType="long" resultType="java.util.Date">
		select OVER_TIME as overTime from USER_BANK_LOCKED where ID = #{id}
	</select>
	
</mapper>
