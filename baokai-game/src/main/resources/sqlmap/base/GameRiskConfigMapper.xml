<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.winterframework.firefrog.game.entity.GameRiskConfig">
	<resultMap id="GameRiskConfigResult" type="com.winterframework.firefrog.game.entity.GameRiskConfig">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="gameRiskConfigColumns">
	    <![CDATA[
	        	ID as id,
	        	LOTTERYID as lotteryId,
	        	ORDERWARN_MAXWINS as orderwarnMaxwins,
	        	ORDERWARN_WINS_RATIO as orderwarnWinsRatio,
	        	ORDERWARN_CONTINUOUS_WINS as orderwarnContinuousWins,
	        	ORDERWARN_MAXSLIP_WINS as orderwarnMaxslipWins,
	        	ORDERWARN_SLIP_WINSRATIO as orderwarnSlipWinsratio,
	        	CREATE_TIME as createTime,
	        	UPDATE_TIME as updateTime
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.winterframework.firefrog.game.entity.GameRiskConfig" 
			useGeneratedKeys="false" keyProperty="id" 
		 flushCache="true">
		 <selectKey resultType="long" order="BEFORE" keyProperty="id">
			     SELECT SEQ_GAME_RISK_CONFIG_ID.Nextval from dual
   	    </selectKey>
	    <![CDATA[
	        INSERT INTO
	        GAME_RISK_CONFIG (
	        	ID ,
	        	ORDERWARN_MAXWINS ,
	        	ORDERWARN_WINS_RATIO ,
	        	ORDERWARN_CONTINUOUS_WINS ,
	        	ORDERWARN_MAXSLIP_WINS ,
	        	ORDERWARN_SLIP_WINSRATIO ,
	        	CREATE_TIME ,
	        	UPDATE_TIME 
	        ) VALUES (
	        	#{id,javaType=long,jdbcType=DECIMAL} ,
	        	#{orderwarnMaxwins,javaType=long,jdbcType=DECIMAL} ,
	        	#{orderwarnWinsRatio,javaType=long,jdbcType=DECIMAL} ,
	        	#{orderwarnContinuousWins,javaType=long,jdbcType=DECIMAL} ,
	        	#{orderwarnMaxslipWins,javaType=long,jdbcType=DECIMAL} ,
	        	#{orderwarnSlipWinsratio,javaType=long,jdbcType=DECIMAL} ,
	        	#{createTime,javaType=date,jdbcType=TIMESTAMP} ,
	        	#{updateTime,javaType=date,jdbcType=TIMESTAMP} 
	        )
	    ]]>	
	
		</insert>
	    
		<update id="update" parameterType="com.winterframework.firefrog.game.entity.GameRiskConfig">
	    <![CDATA[
	        UPDATE GAME_RISK_CONFIG SET
		        ORDERWARN_MAXWINS = #{orderwarnMaxwins,javaType=long,jdbcType=DECIMAL} ,
		        ORDERWARN_WINS_RATIO = #{orderwarnWinsRatio,javaType=long,jdbcType=DECIMAL} ,
		        ORDERWARN_CONTINUOUS_WINS = #{orderwarnContinuousWins,javaType=long,jdbcType=DECIMAL} ,
		        ORDERWARN_MAXSLIP_WINS = #{orderwarnMaxslipWins,javaType=long,jdbcType=DECIMAL} ,
		        ORDERWARN_SLIP_WINSRATIO = #{orderwarnSlipWinsratio,javaType=long,jdbcType=DECIMAL} ,
		        CREATE_TIME = #{createTime,javaType=date,jdbcType=TIMESTAMP} ,
		        UPDATE_TIME = #{updateTime,javaType=date,jdbcType=TIMESTAMP} 
	        WHERE 
		        ID = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from GAME_RISK_CONFIG where
		        ID = #{id} 
	    ]]>
	    </delete>   
	    <select id="getById" parameterType="long" resultMap="GameRiskConfigResult" flushCache="false">
			select <include refid="gameRiskConfigColumns" />
		    <![CDATA[
			    from GAME_RISK_CONFIG 
		        where 
		        ID = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="GameRiskConfigResult" flushCache="false">
			select <include refid="gameRiskConfigColumns" />
			    from GAME_RISK_CONFIG 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	

	<sql id="gameRiskConfigDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="@Ognl@isNotEmpty(id)">
				and ID = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(orderwarnMaxwins)">
				and ORDERWARN_MAXWINS = #{orderwarnMaxwins}
			</if>
	       <if test="@Ognl@isNotEmpty(orderwarnWinsRatio)">
				and ORDERWARN_WINS_RATIO = #{orderwarnWinsRatio}
			</if>
	       <if test="@Ognl@isNotEmpty(orderwarnContinuousWins)">
				and ORDERWARN_CONTINUOUS_WINS = #{orderwarnContinuousWins}
			</if>
	       <if test="@Ognl@isNotEmpty(orderwarnMaxslipWins)">
				and ORDERWARN_MAXSLIP_WINS = #{orderwarnMaxslipWins}
			</if>
	       <if test="@Ognl@isNotEmpty(orderwarnSlipWinsratio)">
				and ORDERWARN_SLIP_WINSRATIO = #{orderwarnSlipWinsratio}
			</if>
	       <if test="@Ognl@isNotEmpty(createTime)">
				and CREATE_TIME = #{createTime}
			</if>
	       <if test="@Ognl@isNotEmpty(updateTime)">
				and UPDATE_TIME = #{updateTime}
			</if>
		</where>
	</sql>
	
	<select id="getAll" resultMap="GameRiskConfigResult"  flushCache="false">
    	select <include refid="gameRiskConfigColumns" />
	    from GAME_RISK_CONFIG 

		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>	
	<select id="getCount" resultType="long">
        select count(*) from GAME_RISK_CONFIG 
    </select>
    <select id="getCountByPage" resultType="long">
        select count(*) from GAME_RISK_CONFIG 
		<include refid="gameRiskConfigDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="getByPage" resultMap="GameRiskConfigResult">
    	select <include refid="gameRiskConfigColumns" />
	    from GAME_RISK_CONFIG 
		<include refid="gameRiskConfigDynamicWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	<select id="selectGameRiskConfig" resultMap="GameRiskConfigResult" flushCache="false">
		select <include refid="gameRiskConfigColumns" />
		    from GAME_RISK_CONFIG  
	</select>	
	
	<select id="selectGameRiskConfigByLottery" resultMap="GameRiskConfigResult" flushCache="false"   parameterType="long">
		select <include refid="gameRiskConfigColumns" /> from GAME_RISK_CONFIG 
		 WHERE  LOTTERYID = #{lotteryId} 
	</select>
	
</mapper>
