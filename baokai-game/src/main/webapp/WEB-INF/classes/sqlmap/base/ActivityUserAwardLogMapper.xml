<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.winterframework.firefrog.game.dao.vo.ActivityUserAwardLog">
	<resultMap id="AwardLog" type="com.winterframework.firefrog.game.dao.vo.ActivityUserAwardLog">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="configColumns">
	    <![CDATA[
	  	ID as id ,
	  	USER_ID as userId ,
	  	ACTIVITY_ID as activityId ,
	  	ACTIVITY_AWARD_CONFIG_ID as activityAwardConfigId ,
	  	AWARD as award ,
	  	REMARK as remark ,
	  	DAILY_BET_AWARD_TIME as dailyBetAwardTime,
	  	REWARD_CHANNEL as rewardChannel,
	  	GMT_CREATED as gmtCreated 
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.winterframework.firefrog.game.dao.vo.ActivityUserAwardLog" 
			useGeneratedKeys="false" keyProperty="id" 
		 flushCache="true">
		   	     	<selectKey resultType="long" order="BEFORE" keyProperty="id">
						     SELECT   SEQ_ACTIVITY_USER_AWARD_LOG_ID.Nextval from dual
			   	    </selectKey>
			   	    
	    <![CDATA[
	        INSERT INTO
	        ACTIVITY_USER_AWARD_LOG (
	        		ID ,
	  				USER_ID ,
	  				ACTIVITY_ID ,
	  				ACTIVITY_AWARD_CONFIG_ID ,
	                REWARD_CHANNEL,
	  				AWARD  ,
	  				REMARK ,
	  				DAILY_BET_AWARD_TIME,
	  				GMT_CREATED  
	        ) VALUES (
	        	#{id,javaType=long,jdbcType=DECIMAL} ,
	        	#{userId,javaType=long,jdbcType=DECIMAL} ,
	        	#{activityId,javaType=long,jdbcType=DECIMAL} ,
	        	#{activityAwardConfigId,javaType=long,jdbcType=DECIMAL} ,
	        	#{rewardChannel,javaType=integer,jdbcType=DECIMAL} ,
	        	#{award,javaType=long,jdbcType=DECIMAL} ,
	        	#{remark,javaType=string,jdbcType=VARCHAR} ,
	        	#{dailyBetAwardTime,javaType=string,jdbcType=VARCHAR} ,
	        	#{gmtCreated,javaType=object,jdbcType=TIMESTAMP} 	        	
	        )
	    ]]>	
	
		</insert>
	    
		<update id="update" parameterType="com.winterframework.firefrog.game.dao.vo.ActivityUserAwardLog">
	    <![CDATA[
	        UPDATE ACTIVITY_USER_AWARD_LOG SET
	        	USER_ID = #{userId,javaType=long,jdbcType=DECIMAL} ,
	        	ACTIVITY_ID = #{activityId,javaType=long,jdbcType=DECIMAL} ,
	        	ACTIVITY_AWARD_CONFIG_ID = #{activityAwardConfigId,javaType=long,jdbcType=DECIMAL} ,
	        	AWARD = #{award,javaType=long,jdbcType=DECIMAL} ,
	        	REMARK = #{remark,javaType=string,jdbcType=VARCHAR} ,
	        	DAILY_BET_AWARD_TIME = #{dailyBetAwardTime,javaType=string,jdbcType=VARCHAR} ,
	        	GMT_CREATED = #{gmtCreated,javaType=object,jdbcType=TIMESTAMP}
	        WHERE 
		        ID = #{id} 
	    ]]>
		</update>

	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from ACTIVITY_USER_AWARD_LOG where
		        ID = #{id} 
	    ]]>
	    </delete>   
	    <select id="getById" parameterType="long" resultMap="AwardLog" flushCache="false">
			select <include refid="configColumns" />
		    <![CDATA[
			    from ACTIVITY_USER_AWARD_LOG 
		        where 
		        ID = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="AwardLog" flushCache="false">
			select <include refid="configColumns" />
			    from ACTIVITY_USER_AWARD_LOG 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	

	<sql id="configDynamicWhere">
		<!-- ognl访问静态方法的表达式 为class org.apache.maven.project.MavenProjectmethod(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="@Ognl@isNotEmpty(id)">
				and ID = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(userId)">
				and USER_ID = #{userId}
			</if>
	       <if test="@Ognl@isNotEmpty(activityId)">
				and ACTIVITY_ID = #{activityId}
			</if>
	       <if test="@Ognl@isNotEmpty(activityAwardConfigId)">
				and ACTIVITY_AWARD_CONFIG_ID = #{activityAwardConfigId}
			</if>
	       <if test="@Ognl@isNotEmpty(award)">
				and AWARD = #{award}
			</if>
	       <if test="@Ognl@isNotEmpty(gmtCreated)">
				and GMT_CREATED = #{gmtCreated}
			</if>
	       <if test="@Ognl@isNotEmpty(remark)">
				and REMARK = #{remark}
			</if>
	      	       
		</where>
	</sql>
	
	<select id="getAll" resultMap="AwardLog"  flushCache="false">
    	select <include refid="configColumns" />
	    from ACTIVITY_USER_AWARD_LOG 

		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>	
    
    <select id="getToday" resultMap="AwardLog"  flushCache="false">
    select * from (     
    	select 	  	
    	ID as id ,
	  	USER_ID as userId ,
	  	(select account from user_customer where id=USER_ID) as userName,
	  	ACTIVITY_ID as activityId ,
	  	ACTIVITY_AWARD_CONFIG_ID as activityAwardConfigId ,
	  	AWARD as award ,
	  	REMARK as remark ,
	  	DAILY_BET_AWARD_TIME as dailyBetAwardTime,
	  	GMT_CREATED as gmtCreated 
	    from ACTIVITY_USER_AWARD_LOG 
		where ACTIVITY_ID=1    order by GMT_CREATED desc ) where <![CDATA[rownum<=15]]>
    </select>
    
     <select id="getAwardLogByUserId" resultMap="AwardLog"  flushCache="false" parameterType="long">
    	select 	  	
    	ID as id ,
	  	USER_ID as userId ,
	  	(select account from user_customer where id=USER_ID) as userName,
	  	(select award_name from ACTIVITY_AWARD_CONFIG where id=ACTIVITY_AWARD_CONFIG_ID) as awardName,
	  	ACTIVITY_ID as activityId ,
	  	ACTIVITY_AWARD_CONFIG_ID as activityAwardConfigId ,
	  	AWARD as award ,
	  	REMARK as remark ,
	  	DAILY_BET_AWARD_TIME as dailyBetAwardTime,
	  	GMT_CREATED as gmtCreated 
	    from ACTIVITY_USER_AWARD_LOG 
		where user_id=#{userId} and ACTIVITY_ID=1 order by GMT_CREATED desc
<!-- 		 and GMT_CREATED > sysdate -1  -->
    </select>
    
	<select id="getCount" resultType="long">
        select count(*) from ACTIVITY_USER_AWARD_LOG 
    </select>
    <select id="getCountByPage" resultType="long">
        select count(*) from ACTIVITY_USER_AWARD_LOG 
		<include refid="configDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="getByPage" resultMap="AwardLog">
    	select <include refid="configColumns" />
	    from ACTIVITY_USER_AWARD_LOG 
		<include refid="configDynamicWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>


</mapper>
