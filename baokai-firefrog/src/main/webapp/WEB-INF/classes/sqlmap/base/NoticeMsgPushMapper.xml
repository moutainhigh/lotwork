<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.winterframework.firefrog.user.entity.NoticeMsgPush">
	<resultMap id="result" type="com.winterframework.firefrog.user.entity.NoticeMsgPush">
		<result column="ID" property="id"/>
		<result column="USER_ID" property="userId"/>
		<result column="NOTICE_MSG_ID" property="noticeMsgId"/>
		<result column="IS_READ" property="isRead"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="UPDATE_DATE" property="updateDate"/>
	</resultMap>
	<resultMap id="noticeMsgResult" type="com.winterframework.firefrog.user.entity.NoticeMsg">
		<result column="ID" property="id"/>
		<result column="ACCOUNT" property="account"/>
		<result column="CREATE_DATE" property="sendTime"/>
		<result column="TITLE" property="title"/>
		<result column="CONTENT" property="content"/>
		<result column="MSGPUSH" property="msgPush"/>
	</resultMap>
	<sql id="fields">
		ID,
		USER_ID,
		NOTICE_MSG_ID,
		IS_READ,
		CREATE_DATE,
		UPDATE_DATE
	</sql>


	<sql id="whereCondition">
		<where>
			<if test="targetId != null">
				AND ID = #{targetId}
			</if>
			<if test="targetUserId != null">
				AND USER_ID = #{targetUserId}
			</if>
			<if test="targetNoticeMsgId != null">
				AND NOTICE_MSG_ID = #{targetNoticeMsgId}
			</if>
			<if test="targetIsRead != null">
				AND IS_READ = #{targetIsRead}
			</if>
			<if test="targetCreateDateStart != null">
				AND CREATE_DATE >= #{targetCreateDateStart}
			</if>
			<if test="targetCreateDateEnd != null">
			<![CDATA[
				AND CREATE_DATE < #{targetCreateDateEnd}
			]]>
			</if>
			<if test="targetUpdateDateStart != null">
				AND UPDATE_DATE >= #{targetUpdateDateStart}
			</if>
			<if test="targetUpdateDateEnd != null">
			<![CDATA[
				AND UPDATE_DATE < #{targetUpdateDateEnd}
			]]>
			</if>
		</where>
	</sql>
	<select id="findAll" resultMap="result" parameterType="com.winterframework.firefrog.user.entity.NoticeMsgPush">
		SELECT <include refid="fields"/>
				FROM NOTICE_MSG_PUSH
		<include refid="whereCondition"/>
	</select>
	
	<select id="queryUnreadNoticeMsgs" resultMap="noticeMsgResult" parameterType="com.winterframework.firefrog.user.entity.NoticeMsgPush">
		SELECT 
			NMP.ID AS ID,
		    '系統管理員' AS ACCOUNT,
		    NMP.CREATE_DATE AS CREATE_DATE,
		    NM.TITLE as TITLE,
		    NM.CONTENT as CONTENT,
		    NM.MSGPUSH as MSGPUSH
		  FROM NOTICE_MSG_PUSH NMP
		  JOIN NOTICE_MSG NM ON NM.ID = NMP.NOTICE_MSG_ID
		  WHERE NMP.USER_ID = #{targetUserId} 
		  AND NMP.IS_READ = 0
	</select>
	
	<select id="queryUnreadNoticeMsgCount" resultType="Long" parameterType="com.winterframework.firefrog.user.entity.NoticeMsgPush">
		SELECT 
			COUNT(0)
		  FROM NOTICE_MSG_PUSH NMP
		  JOIN NOTICE_MSG NM ON NM.ID = NMP.NOTICE_MSG_ID
		  WHERE NMP.USER_ID = #{targetUserId} 
		  AND NMP.IS_READ = 0
	</select>

	<select id="genCountByCondition" resultType="Long">
		SELECT COUNT(1) 
				FROM NOTICE_MSG_PUSH
		<include refid="whereCondition"/>
	</select>

	<update id="updateNoticeMsgPush">
		UPDATE NOTICE_MSG_PUSH
			<set>
				<if test="isRead != null">
					IS_READ = #{isRead},
				</if>
				<if test="updateDate != null">
					UPDATE_DATE = #{updateDate}
				</if>
			</set>
		WHERE USER_ID = #{targetUserId}
		AND ID = #{targetId}
	</update>

	<insert id="insert" parameterType="com.winterframework.firefrog.user.entity.NoticeMsgPush"
		useGeneratedKeys="false" keyProperty="id" flushCache="true">
		<selectKey resultType="long" order="BEFORE" keyProperty="id">
			SELECT SEQ_NOTICE_MSG_PUSH_ID.Nextval from dual
		</selectKey>
	        INSERT INTO
	        NOTICE_MSG_PUSH (
	        <include refid="fields"/>)
	        VALUES (
	         #{id,javaType=long,jdbcType=DECIMAL},
	         #{userId,javaType=long,jdbcType=DECIMAL},
	         #{noticeMsgId,javaType=long,jdbcType=DECIMAL},
	         #{isRead,javaType=long,jdbcType=DECIMAL},
	         #{createDate,javaType=object,jdbcType=TIMESTAMP},
	         #{updateDate,javaType=object,jdbcType=TIMESTAMP}
	        )
	</insert>

</mapper>
