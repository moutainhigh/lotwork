<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.winterframework.firefrog.fund.dao.vo.FundChangeLog">
	<resultMap id="FundChangeLogResult" type="com.winterframework.firefrog.fund.dao.vo.FundChangeLog">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="fundChangeLogColumns">
	    <![CDATA[
	        	ID as id,
	        	USER_ID as userId,
	        	BEFOR_BAL as beforBal,
	        	BEFORE_DAMT as beforeDamt,
	        	CT_BAL as ctBal,
	        	CT_DAMT as ctDamt,
	        	CT_BAL-BEFOR_BAL as changeAmt,
	        	CT_DAMT-BEFORE_DAMT as frozeAmt,
	        	REASON as reason,
	        	OPERATOR as operator,
	        	FUND_ID as fundId,
	        	sn as sn,
	        	account as account,
	        	fund_sn as fundSn,
	        	ex_code as exCode,
	        	gmt_created as gmtCreated,
	        	plan_code as planCode,
	        	note as note,
	        	CT_AVAIL_BAL as ctAvailBal,
	        	BEFORE_AVAIL_BAL as beforeAvailBal
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.winterframework.firefrog.fund.dao.vo.FundChangeLog" 
			useGeneratedKeys="false" keyProperty="id" 
		 flushCache="true">
		 	<selectKey resultType="long" order="BEFORE" keyProperty="id">
				SELECT    SEQ_FUND_CHANGE_LOG_ID.Nextval from dual
			</selectKey>
	    <![CDATA[
	        INSERT INTO
	        FUND_CHANGE_LOG (
	        	ID ,
	        	USER_ID ,
	        	BEFOR_BAL ,
	        	BEFORE_DAMT ,
	        	CT_BAL ,
	        	CT_DAMT ,
	        	REASON ,
	        	OPERATOR ,
	        	FUND_ID ,
	        	sn,
	        	FUND_SN,
	        	gmt_created,
	        	ISACLUSER,
	        	ISVISIBLEBYFRONTUSER ,
	        	ex_code,
	        	plan_code,
	        	note,
	        	ct_avail_bal,
	        	before_avail_bal
	        ) VALUES (
	        	#{id,javaType=long,jdbcType=DECIMAL} ,
	        	#{userId,javaType=long,jdbcType=DECIMAL} ,
	        	#{beforBal,javaType=long,jdbcType=DECIMAL} ,
	        	#{beforeDamt,javaType=long,jdbcType=DECIMAL} ,
	        	#{ctBal,javaType=long,jdbcType=DECIMAL} ,
	        	#{ctDamt,javaType=long,jdbcType=DECIMAL} ,
	        	#{reason,javaType=string,jdbcType=DECIMAL} ,
	        	#{operator,javaType=long,jdbcType=DECIMAL} ,
	        	#{fundId,javaType=long,jdbcType=DECIMAL} ,
	        	#{sn,javaType=string,jdbcType=VARCHAR} ,
	        	#{fundSn,javaType=string,jdbcType=VARCHAR} ,
	        	#{gmtCreated,javaType=date,jdbcType=TIMESTAMP},
	        	#{isAclUser,javaType=long,jdbcType=DECIMAL} ,
	        	#{isVisiblebyFrontUser,javaType=long,jdbcType=DECIMAL},
	        	#{exCode,javaType=string,jdbcType=VARCHAR} ,
	        	#{planCode,javaType=string,jdbcType=VARCHAR} ,
	        	#{note,javaType=string,jdbcType=VARCHAR} ,
	        	#{ctAvailBal,javaType=long,jdbcType=DECIMAL} ,
	        	#{beforeAvailBal,javaType=long,jdbcType=DECIMAL} 
	        )
	    ]]>	
	
		</insert>
	    
		<update id="update" parameterType="com.winterframework.firefrog.fund.dao.vo.FundChangeLog">
	    <![CDATA[
	        UPDATE FUND_CHANGE_LOG SET
		        USER_ID = #{userId,javaType=long,jdbcType=DECIMAL} ,
		        BEFOR_BAL = #{beforBal,javaType=long,jdbcType=DECIMAL} ,
		        BEFORE_DAMT = #{beforeDamt,javaType=long,jdbcType=DECIMAL} ,
		        CT_BAL = #{ctBal,javaType=long,jdbcType=DECIMAL} ,
		        CT_DAMT = #{ctDamt,javaType=long,jdbcType=DECIMAL} ,
		        REASON = #{reason,javaType=string,jdbcType=DECIMAL} ,
		        OPERATOR = #{operator,javaType=long,jdbcType=DECIMAL} ,
		        FUND_ID = #{fundId,javaType=long,jdbcType=DECIMAL} ,
		        sn = #{sn,javaType=string,jdbcType=VARCHAR} 
	        WHERE 
		        ID = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from FUND_CHANGE_LOG where
		        ID = #{id} 
	    ]]>
	    </delete>   
	    <select id="getById" parameterType="long" resultMap="FundChangeLogResult" flushCache="false">
			select <include refid="fundChangeLogColumns" />
		    <![CDATA[
			    from FUND_CHANGE_LOG 
		        where 
		        ID = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="FundChangeLogResult" flushCache="false">
			select <include refid="fundChangeLogColumns" />
			    from FUND_CHANGE_LOG 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	

	<sql id="fundChangeLogDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
		  <if test="@Ognl@isNotEmpty(userId)">
			  <![CDATA[
			    (befor_bal-ct_bal>=1 or befor_bal-ct_bal<=-1) 
			   ]]>
		   </if>
	       <if test="@Ognl@isNotEmpty(id)">
				and ID = #{id}
			</if>
			  <if test="@Ognl@isNotEmpty(planCode)">
				and plan_code = #{planCode}
			</if>
			 <if test="@Ognl@isNotEmpty(exCode)">
				and ex_code = #{exCode}
			</if>
	       <if test="@Ognl@isNotEmpty(userId)">
				and USER_ID = #{userId}
			</if>
	       <if test="@Ognl@isNotEmpty(beforBal)">
				and BEFOR_BAL = #{beforBal}
			</if>
	       <if test="@Ognl@isNotEmpty(beforeDamt)">
				and BEFORE_DAMT = #{beforeDamt}
			</if>
	       <if test="@Ognl@isNotEmpty(ctBal)">
				and CT_BAL = #{ctBal}
			</if>
	       <if test="@Ognl@isNotEmpty(ctDamt)">
				and CT_DAMT = #{ctDamt}
			</if>
	       <if test="@Ognl@isNotEmpty(reason)">
				and REASON = #{reason}
			</if>
	       <if test="@Ognl@isNotEmpty(operator)">
				and OPERATOR = #{operator}
			</if>
	       <if test="@Ognl@isNotEmpty(fundId)">
				and FUND_ID = #{fundId}
			</if>
			<if test="@Ognl@isNotEmpty(userChain)">
				and user_chain like  '%/${userChain}/%'				
			</if>
			<if test="@Ognl@isNotEmpty(filterZero)">
			  <![CDATA[
			     and befor_bal-ct_bal<>0 
			   ]]>	
			</if>
	       <if test="@Ognl@isNotEmpty(sn)">
				and sn = #{sn}
			</if>
			<if test="@Ognl@isNotEmpty(account)">
				and account = #{account}
			</if>
			<if test="@Ognl@isNotEmpty(summary)">
			 and substr(reason,4,4) in
				<foreach item="item" index="index" collection="summary" open="("
					separator="," close=")">
					 #{item}
				</foreach>
			</if>
			
			<if test="@Ognl@isNotEmpty(fromDate)">
			<![CDATA[
				and gmt_created >= #{fromDate}
				 ]]>
			</if>
			<if test="@Ognl@isEmpty(fromDate)">
			<![CDATA[
				and gmt_created >= sysdate-2
				 ]]>
			</if>
			<if test="@Ognl@isNotEmpty(toDate)">
			<![CDATA[
				and gmt_created <= #{toDate}
					 ]]>
			</if>
			<if test="@Ognl@isNotEmpty(recycleDate)">
				and gmt_created > #{recycleDate}
			</if>
			<if test="@Ognl@isNotEmpty(note)">
				and note = #{note}
			</if>
		</where>
	</sql>
	
	
	<select id="getAllunion" resultMap="FundChangeLogResult"  flushCache="false">
    	select <include refid="fundChangeLogColumns" />
	    from FUND_CHANGE_LOG 
	    
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>	
    
	
	<select id="getAll" resultMap="FundChangeLogResult"  flushCache="false">
    	select <include refid="fundChangeLogColumns" />
	    from FUND_CHANGE_LOG 
	    
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>	
	<select id="getCount" resultType="long">
        select count(*) from view_FUND_CHANGE_LOG 
    </select>
    <select id="getCountByPage" resultType="long">
        select count(*) from view_FUND_CHANGE_LOG 
		<include refid="fundChangeLogDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="getByPage" resultMap="FundChangeLogResult">
    	select <include refid="fundChangeLogColumns" />
	    from view_FUND_CHANGE_LOG 
		<include refid="fundChangeLogDynamicWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
    
     <select id="getByPage_Union" resultMap="FundChangeLogResult">
    	select <include refid="fundChangeLogColumns" />
	    from view_FUND_CHANGE_LOG_UNION
		<include refid="fundChangeLogDynamicWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
      <select id="getCountByPage_Union" resultType="long">
        select count(*) from view_FUND_CHANGE_LOG_UNION 
		<include refid="fundChangeLogDynamicWhere"/>    
    </select>
    
    
	<select id="getTotal" resultMap="FundChangeLogResult">
        select sum(inBal) as totalinBal ,sum(totalfrozeAmt) as totalfrozeAmt,sum(outBal) as totaloutBal from (
		select  CASE
		<![CDATA[
             WHEN (a.CT_BAL - a.BEFOR_BAL) > 0 THEN (a.CT_BAL - a.BEFOR_BAL) 
             WHEN (a.CT_BAL - a.BEFOR_BAL) < 0 THEN 0
             ELSE 0
          END as inBal,
          (a.CT_DAMT - a.BEFORE_DAMT) as totalfrozeAmt,
        CASE
			 WHEN (a.CT_BAL - a.BEFOR_BAL) > 0 THEN 0 
			 WHEN (a.CT_DAMT - a.BEFORE_DAMT) < 0 THEN (a.CT_DAMT - a.BEFORE_DAMT) 
			 WHEN (a.CT_BAL - a.BEFOR_BAL) <> 0 AND (a.CT_DAMT - a.BEFORE_DAMT) = 0  THEN (a.CT_BAL - a.BEFOR_BAL)
			 WHEN (a.CT_BAL - a.BEFOR_BAL) < 0 AND (a.CT_DAMT - a.BEFORE_DAMT) = 0 AND (a.CT_BAL - a.BEFOR_BAL) != 0 THEN (a.CT_DAMT - a.BEFORE_DAMT) 
             ELSE 0
          END as outBal
         ]]>
 		FROM view_FUND_CHANGE_LOG a
 		<include refid="fundChangeLogDynamicWhere"/>)
    </select>
    
    <!-- 以SN與日期區間進行查詢 -->
    <select id="getBylogSn" resultMap="FundChangeLogResult">
    	select gmt_created as gmtCreated,CT_BAL as ctBal
	    from FUND_CHANGE_LOG 
	    <include refid="fundChangeLogDynamicWhere"/>
    </select>
	
</mapper>
