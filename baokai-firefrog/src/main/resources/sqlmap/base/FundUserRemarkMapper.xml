<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.winterframework.firefrog.fund.dao.vo.FundUserRemarkVO">
		<resultMap id="FundUserRemarkResult" type="com.winterframework.firefrog.fund.dao.vo.FundUserRemarkVO">
	</resultMap>
	<resultMap id="FundUserRemarkResultExt" type="com.winterframework.firefrog.fund.dao.vo.FundUserRemarkExtVO">
	</resultMap>
	<!-- 用于select查询公用抽取的列 -->
	<sql id="fundUserRemarkColumns">
	    <![CDATA[
	        	ID as id,
	        	USER_ID as userId,
	        	REMARK as remark,
	        	GMT_CREATED as gmtCreated,
	        	GMT_MODIFIED as gmtModified,
	        	GMT_AUTOUNLOCKED as gmtAutounlocked,
	        	GMT_CANSETREMARK as gmtCansetremark
	    ]]>
	</sql>
		<sql id="fundUserRemarkExtColumns">
	    <![CDATA[
	        	ID as id,
	        	USER_ID as userId,
	        	REMARK as remark,
	        	GMT_CREATED as gmtCreated,
	        	GMT_MODIFIED as gmtModified,
	        	GMT_AUTOUNLOCKED as gmtAutounlocked,
	        	GMT_CANSETREMARK as gmtCansetremark,
	        	account,
	        	userChain,
	        	vipLvl,
	        	userStatus
	        	
	    ]]>
	</sql>
	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.winterframework.firefrog.fund.dao.vo.FundUserRemarkVO" 
			useGeneratedKeys="false" keyProperty="id" 
		 flushCache="true">
		 <selectKey resultType="long" order="BEFORE" keyProperty="id">
			SELECT SEQ_FUND_USER_REMARK_ID.Nextval from dual
		</selectKey>
	    <![CDATA[
	        INSERT INTO
	        FUND_USER_REMARK (
	        	ID ,
	        	USER_ID ,
	        	REMARK ,
	        	GMT_CREATED ,
	        	GMT_MODIFIED ,
	        	GMT_AUTOUNLOCKED ,
	        	GMT_CANSETREMARK 
	        ) VALUES (
	        	#{id,javaType=long,jdbcType=DECIMAL} ,
	        	#{userId,javaType=long,jdbcType=DECIMAL} ,
	        	#{remark,javaType=string,jdbcType=VARCHAR} ,
	        	#{gmtCreated,javaType=date,jdbcType=TIMESTAMP} ,
	        	#{gmtModified,javaType=date,jdbcType=TIMESTAMP} ,
	        	#{gmtAutounlocked,javaType=date,jdbcType=TIMESTAMP} ,
	        	#{gmtCansetremark,javaType=date,jdbcType=TIMESTAMP} 
	        )
	    ]]>	
	
		</insert>
		
		<update id="update" parameterType="com.winterframework.firefrog.fund.dao.vo.FundUserRemarkVO">
	    <![CDATA[
	        UPDATE FUND_USER_REMARK SET
		        USER_ID = #{userId,javaType=long,jdbcType=DECIMAL} ,
		        REMARK = #{remark,javaType=string,jdbcType=VARCHAR} ,
		        GMT_MODIFIED = #{gmtModified,javaType=object,jdbcType=OTHER} ,
		        GMT_AUTOUNLOCKED = #{gmtAutounlocked,javaType=date,jdbcType=TIMESTAMP},
		        GMT_CANSETREMARK = #{gmtCansetremark,javaType=date,jdbcType=TIMESTAMP} 
	        WHERE 
		        ID = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from FUND_USER_REMARK where
		        ID = #{id} 
	    ]]>
	    </delete>   
	    
	    
	    <select id="getById" parameterType="long" resultMap="FundUserRemarkResult" flushCache="false">
			select <include refid="fundUserRemarkColumns" />
		    <![CDATA[
			    from FUND_USER_REMARK 
		        where 
		        ID = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="FundUserRemarkResult" flushCache="false">
			select <include refid="fundUserRemarkColumns" />
			    from FUND_USER_REMARK 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
		
		<sql id="fundUserRemarkDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="@Ognl@isNotEmpty(id)">
				and ID = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(userId)">
				and USER_ID = #{userId}
			</if>
		     <if test="@Ognl@isNotEmpty(remark)">
				and REMARK = #{remark}
			</if>
	       <if test="@Ognl@isNotEmpty(gmtCreated)">
				and GMT_CREATED = #{gmtCreated}
			</if>
	       <if test="@Ognl@isNotEmpty(gmtModified)">
				and GMT_MODIFIED = #{gmtModified}
			</if>
	       <if test="@Ognl@isNotEmpty(gmtAutounlocked)">
				and GMT_AUTOUNLOCKED = #{gmtAutounlocked}
			</if>
	       <if test="@Ognl@isNotEmpty(gmtCansetremark)">
				and GMT_CANSETREMARK = #{gmtCansetremark}
			</if>
			 <if test="@Ognl@isNotEmpty(startBindDate)">
				and ( GMT_MODIFIED is not null and GMT_MODIFIED >= #{startBindDate} and remark is not null ) 
			</if>
			 <if test="@Ognl@isNotEmpty(endBindDate)">
			 <![CDATA[
				and ( GMT_MODIFIED is not null and GMT_MODIFIED <= #{endBindDate} and remark is not null ) 
				]]>
			</if>
			 <if test="@Ognl@isNotEmpty(account)">
				and account like  '%'||#{account}||'%' 
			</if>
			 <if test="@Ognl@isNotEmpty(vipLvl)">
				and vipLvl = #{vipLvl}
			</if>
			 <if test="@Ognl@isNotEmpty(isFreeze)">
				and userStatus = #{isFreeze}
			</if>
			 <if test="@Ognl@isNotEmpty(topAccount)">
				and userChain like '/'||#{topAccount}||'%'
			</if>
		</where>
	</sql>
	
	<select id="getAll" resultMap="FundUserRemarkResult"  flushCache="false">
    	select <include refid="fundUserRemarkColumns" />
	    from FUND_USER_REMARK 

		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>	
	<select id="getCount" resultType="long">
        select count(*) from FUND_USER_REMARK 
    </select>
    <select id="getCountByPage" resultType="long">
        select count(*) from view_FUND_USER_REMARK 
		<include refid="fundUserRemarkDynamicWhere"/>    
    </select>
    
     <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="getPageRemarks" resultMap="FundUserRemarkResultExt">
    	select <include refid="fundUserRemarkExtColumns" />
	    from VIEW_FUND_USER_REMARK
		<include refid="fundUserRemarkDynamicWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
		
		<select id="getUserRemarkByUserId" resultMap="FundUserRemarkResult"  flushCache="false">
    	select <include refid="fundUserRemarkColumns" />
	    from FUND_USER_REMARK where USER_ID= #{userId}
    </select>	
</mapper>
