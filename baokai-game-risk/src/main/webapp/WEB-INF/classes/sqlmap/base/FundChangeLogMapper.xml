<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.winterframework.firefrog.fund.dao.vo.FundChangeLog">
	<resultMap id="FundChangeLogResult" type="com.winterframework.firefrog.fund.dao.vo.FundChangeLog">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="fundChangeLogColumns">
	    <![CDATA[
	        	ID as id,
	        	USER_ID as userId,
	        	BEFOR_BAL as beforBal,
	        	BEFORE_DAMT as beforeDamt,
	        	CT_BAL as ctBal,
	        	CT_DAMT as ctDamt,
	        	REASON as reason,
	        	OPERATOR as operator,
	        	FUND_ID as fundId,
	        	T_CODE as tcode
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.winterframework.firefrog.fund.dao.vo.FundChangeLog" 
			useGeneratedKeys="false" keyProperty="id" 
		 flushCache="true">
		 	<selectKey resultType="long" order="BEFORE" keyProperty="id">
				SELECT    SEQ_FUND_CHANGE_LOG_ID.Nextval from dual
			</selectKey>
	    <![CDATA[
	        INSERT INTO
	        FUND_CHANGE_LOG (
	        	ID ,
	        	USER_ID ,
	        	BEFOR_BAL ,
	        	BEFORE_DAMT ,
	        	CT_BAL ,
	        	CT_DAMT ,
	        	REASON ,
	        	OPERATOR ,
	        	FUND_ID ,
	        	T_CODE 
	        ) VALUES (
	        	#{id,javaType=long,jdbcType=DECIMAL} ,
	        	#{userId,javaType=long,jdbcType=DECIMAL} ,
	        	#{beforBal,javaType=double,jdbcType=DECIMAL} ,
	        	#{beforeDamt,javaType=double,jdbcType=DECIMAL} ,
	        	#{ctBal,javaType=double,jdbcType=DECIMAL} ,
	        	#{ctDamt,javaType=double,jdbcType=DECIMAL} ,
	        	#{reason,javaType=long,jdbcType=DECIMAL} ,
	        	#{operator,javaType=long,jdbcType=DECIMAL} ,
	        	#{fundId,javaType=long,jdbcType=DECIMAL} ,
	        	#{tcode,javaType=string,jdbcType=VARCHAR} 
	        )
	    ]]>	
	
		</insert>
	    
		<update id="update" parameterType="com.winterframework.firefrog.fund.dao.vo.FundChangeLog">
	    <![CDATA[
	        UPDATE FUND_CHANGE_LOG SET
		        USER_ID = #{userId,javaType=long,jdbcType=DECIMAL} ,
		        BEFOR_BAL = #{beforBal,javaType=double,jdbcType=DECIMAL} ,
		        BEFORE_DAMT = #{beforeDamt,javaType=double,jdbcType=DECIMAL} ,
		        CT_BAL = #{ctBal,javaType=double,jdbcType=DECIMAL} ,
		        CT_DAMT = #{ctDamt,javaType=double,jdbcType=DECIMAL} ,
		        REASON = #{reason,javaType=long,jdbcType=DECIMAL} ,
		        OPERATOR = #{operator,javaType=long,jdbcType=DECIMAL} ,
		        FUND_ID = #{fundId,javaType=long,jdbcType=DECIMAL} ,
		        T_CODE = #{tcode,javaType=string,jdbcType=VARCHAR} 
	        WHERE 
		        ID = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from FUND_CHANGE_LOG where
		        ID = #{id} 
	    ]]>
	    </delete>   
	    <select id="getById" parameterType="long" resultMap="FundChangeLogResult" flushCache="false">
			select <include refid="fundChangeLogColumns" />
		    <![CDATA[
			    from FUND_CHANGE_LOG 
		        where 
		        ID = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="FundChangeLogResult" flushCache="false">
			select <include refid="fundChangeLogColumns" />
			    from FUND_CHANGE_LOG 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	

	<sql id="fundChangeLogDynamicWhere">
		<!-- ognl访问静态方法的表达式 为class org.apache.maven.project.MavenProjectmethod(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="@Ognl@isNotEmpty(id)">
				and ID = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(userId)">
				and USER_ID = #{userId}
			</if>
	       <if test="@Ognl@isNotEmpty(beforBal)">
				and BEFOR_BAL = #{beforBal}
			</if>
	       <if test="@Ognl@isNotEmpty(beforeDamt)">
				and BEFORE_DAMT = #{beforeDamt}
			</if>
	       <if test="@Ognl@isNotEmpty(ctBal)">
				and CT_BAL = #{ctBal}
			</if>
	       <if test="@Ognl@isNotEmpty(ctDamt)">
				and CT_DAMT = #{ctDamt}
			</if>
	       <if test="@Ognl@isNotEmpty(reason)">
				and REASON = #{reason}
			</if>
	       <if test="@Ognl@isNotEmpty(operator)">
				and OPERATOR = #{operator}
			</if>
	       <if test="@Ognl@isNotEmpty(fundId)">
				and FUND_ID = #{fundId}
			</if>
	       <if test="@Ognl@isNotEmpty(tcode)">
				and T_CODE = #{tcode}
			</if>
		</where>
	</sql>
	
	<select id="getAll" resultMap="FundChangeLogResult"  flushCache="false">
    	select <include refid="fundChangeLogColumns" />
	    from FUND_CHANGE_LOG 

		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>	
	<select id="getCount" resultType="long">
        select count(*) from FUND_CHANGE_LOG 
    </select>
    <select id="getCountByPage" resultType="long">
        select count(*) from FUND_CHANGE_LOG 
		<include refid="fundChangeLogDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="getByPage" resultMap="FundChangeLogResult">
    	select <include refid="fundChangeLogColumns" />
	    from FUND_CHANGE_LOG 
		<include refid="fundChangeLogDynamicWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>
