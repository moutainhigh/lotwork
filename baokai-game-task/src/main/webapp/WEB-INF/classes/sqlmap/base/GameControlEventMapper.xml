<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.winterframework.firefrog.game.dao.vo.GameControlEvent">
	<resultMap id="GameControlEventResult" type="com.winterframework.firefrog.game.dao.vo.GameControlEvent">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="gameControlEventColumns">
	    <![CDATA[
	        	ID as id,
	        	LOTTERYID as lotteryid,
	        	START_ISSUE_CODE as startIssueCode,
	        	END_ISSUE_CODE as endIssueCode,
	        	SALE_START_TIME as saleStartTime,
	        	SALE_END_TIME as saleEndTime,
	        	STATUS as status,
	        	CREATE_TIME as createTime,
	        	UPDATE_TIME as updateTime,
	        	ENENT_TYPE as enentType,
	        	WARN_ISSUE_ID as warnIssueId,
	        	MESSAGE as message,
	        	CREATOR as creator,
	        	PARAMS as params,
	        	REDO_NUMBER as redoNumber,
	        	NEXT_DO_TIME as nextDoTime,
	        	EXEC_TIME as execTime
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.winterframework.firefrog.game.dao.vo.GameControlEvent" 
			useGeneratedKeys="false" keyProperty="id" 
		 flushCache="true">
		 <selectKey resultType="long" order="BEFORE" keyProperty="id">
			     SELECT   SEQ_GAME_CONTROL_EVENT_ID.Nextval from dual
   	    </selectKey>
	    <![CDATA[
	        INSERT INTO
	        GAME_CONTROL_EVENT (
	        	ID ,
	        	LOTTERYID ,
	        	START_ISSUE_CODE ,
	        	END_ISSUE_CODE ,
	        	SALE_START_TIME ,
	        	SALE_END_TIME ,
	        	STATUS ,
	        	CREATE_TIME ,
	        	UPDATE_TIME ,
	        	ENENT_TYPE,
	        	WARN_ISSUE_ID,
	        	MESSAGE,
	        	CREATOR,
	        	PARAMS,
	        	REDO_NUMBER,
	        	NEXT_DO_TIME,
	        	EXEC_TIME
	        ) VALUES (
	        	#{id,javaType=long,jdbcType=DECIMAL} ,
	        	#{lotteryid,javaType=long,jdbcType=DECIMAL} ,
	        	#{startIssueCode,javaType=long,jdbcType=DECIMAL} ,
	        	#{endIssueCode,javaType=long,jdbcType=DECIMAL} ,
	        	#{saleStartTime,javaType=date,jdbcType=TIMESTAMP} ,
	        	#{saleEndTime,javaType=date,jdbcType=TIMESTAMP} ,
	        	#{status,javaType=long,jdbcType=DECIMAL} ,
	        	#{createTime,javaType=date,jdbcType=TIMESTAMP} ,
	        	#{updateTime,javaType=date,jdbcType=TIMESTAMP} ,
	        	#{enentType,javaType=long,jdbcType=DECIMAL},
	        	#{warnIssueId,javaType=long,jdbcType=DECIMAL} ,
	        	#{message,javaType=string,jdbcType=DECIMAL} ,
	        	#{creator,javaType=long,jdbcType=DECIMAL} ,
	        	#{params,javaType=string,jdbcType=DECIMAL},
	        	#{redoNumber,javaType=int,jdbcType=DECIMAL},
	        	#{nextDoTime,javaType=date,jdbcType=TIMESTAMP},
	        	#{execTime,javaType=date,jdbcType=TIMESTAMP}
	        )
	    ]]>	
	
		</insert>
	    
		<update id="update" parameterType="com.winterframework.firefrog.game.dao.vo.GameControlEvent">
	    <![CDATA[
	        UPDATE GAME_CONTROL_EVENT SET
		        LOTTERYID = #{lotteryid,javaType=long,jdbcType=DECIMAL} ,
		        START_ISSUE_CODE = #{startIssueCode,javaType=long,jdbcType=DECIMAL} ,
		        END_ISSUE_CODE = #{endIssueCode,javaType=long,jdbcType=DECIMAL} ,
		        SALE_START_TIME = #{saleStartTime,javaType=date,jdbcType=TIMESTAMP} ,
		        SALE_END_TIME = #{saleEndTime,javaType=date,jdbcType=TIMESTAMP} ,
		        STATUS = #{status,javaType=long,jdbcType=DECIMAL} ,
		        CREATE_TIME = #{createTime,javaType=date,jdbcType=TIMESTAMP} ,
		        UPDATE_TIME = #{updateTime,javaType=date,jdbcType=TIMESTAMP} ,
		        ENENT_TYPE = #{enentType,javaType=long,jdbcType=DECIMAL} ,
		        WARN_ISSUE_ID=#{warnIssueId,javaType=long,jdbcType=DECIMAL},
		        MESSAGE = #{message,javaType=string,jdbcType=DECIMAL},
		        CREATOR = #{creator,javaType=long,jdbcType=DECIMAL} ,
		        PARAMS = #{params,javaType=string,jdbcType=DECIMAL},
	        	REDO_NUMBER = #{redoNumber,javaType=int,jdbcType=DECIMAL},
	        	NEXT_DO_TIME = #{nextDoTime,javaType=date,jdbcType=TIMESTAMP},
	        	EXEC_TIME = #{execTime,javaType=date,jdbcType=TIMESTAMP}
	        WHERE 
		        ID = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from GAME_CONTROL_EVENT where
		        ID = #{id} 
	    ]]>
	    </delete>   
	    <select id="getById" parameterType="long" resultMap="GameControlEventResult" flushCache="false">
			select <include refid="gameControlEventColumns" />
		    <![CDATA[
			    from GAME_CONTROL_EVENT 
		        where 
		        ID = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="GameControlEventResult" flushCache="false">
			select <include refid="gameControlEventColumns" />
			    from GAME_CONTROL_EVENT 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	

	<sql id="gameControlEventDynamicWhere">
		<!-- ognl访问静态方法的表达式 为class org.apache.maven.project.MavenProjectmethod(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="@Ognl@isNotEmpty(id)">
				and ID = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(lotteryid)">
				and LOTTERYID = #{lotteryid}
			</if>
	       <if test="@Ognl@isNotEmpty(startIssueCode)">
				and START_ISSUE_CODE = #{startIssueCode}
			</if>
	       <if test="@Ognl@isNotEmpty(endIssueCode)">
				and END_ISSUE_CODE = #{endIssueCode}
			</if>
	       <if test="@Ognl@isNotEmpty(saleStartTime)">
				and SALE_START_TIME = #{saleStartTime}
			</if>
	       <if test="@Ognl@isNotEmpty(saleEndTime)">
				and SALE_END_TIME = #{saleEndTime}
			</if>
	       <if test="@Ognl@isNotEmpty(status)">
				and STATUS = #{status}
			</if>
	       <if test="@Ognl@isNotEmpty(createTime)">
				and CREATE_TIME = #{createTime}
			</if>
	       <if test="@Ognl@isNotEmpty(updateTime)">
				and UPDATE_TIME = #{updateTime}
			</if>
	       <if test="@Ognl@isNotEmpty(enentType)">
				and ENENT_TYPE = #{enentType}
			</if>
			<if test="@Ognl@isNotEmpty(redoNumber)">
				and REDO_NUMBER = #{redoNumber}
			</if>
			<if test="@Ognl@isNotEmpty(nextDoTime)">
				<![CDATA[
				and NEXT_DO_TIME < #{nextDoTime}
				]]>
			</if>
		</where>
	</sql>
	
	<select id="getAll" resultMap="GameControlEventResult"  flushCache="false">
    	select <include refid="gameControlEventColumns" />
	    from GAME_CONTROL_EVENT 

		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>	
	<select id="getCount" resultType="long">
        select count(*) from GAME_CONTROL_EVENT 
    </select>
    <select id="getCountByPage" resultType="long">
        select count(*) from GAME_CONTROL_EVENT 
		<include refid="gameControlEventDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="getByPage" resultMap="GameControlEventResult">
    	select <include refid="gameControlEventColumns" />
	    from GAME_CONTROL_EVENT 
		<include refid="gameControlEventDynamicWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    
    <select id="getReDoGameControlEvents" parameterType="hashMap" resultMap="GameControlEventResult">
    	select <include refid="gameControlEventColumns" />
    	 <![CDATA[
	    from GAME_CONTROL_EVENT 
	    where status=3 
	    and REDO_NUMBER < 2 
	    and NEXT_DO_TIME < #{nextDoTime} 
	    and lotteryid=#{lotteryId} 
	    and ROWNUM < 100 
	    order by id asc
	     ]]>
    </select>
    <select id="getGameControlEventsAsync" parameterType="hashMap" resultMap="GameControlEventResult">
    	select <include refid="gameControlEventColumns" /> 
		    from GAME_CONTROL_EVENT 
		    where status=3 
		    and lotteryid=#{lotteryId} 
		    <if test="isDependent==1">
	       		and end_issue_code=#{realLotteryId}
	        </if>
	        <if test="isDependent==0">
	       		and end_issue_code not in(99106,99111,99114,99305,99201,99101,99103,99304,99112,99306,99602,99603,99113,99307)
	        </if> 
	        <![CDATA[
		    and REDO_NUMBER < 3 
		    and NEXT_DO_TIME < #{nextDoTime} 
		    and ROWNUM < 100 
		    ]]>
		    order by id asc	     
    </select>
    
    <select id="getAllUnExcuteGameControlEvents" resultMap="GameControlEventResult">
    	select <include refid="gameControlEventColumns" />
    	 <![CDATA[
	    from GAME_CONTROL_EVENT where status=0 and lotteryid=#{lotteryId} and ROWNUM < 100 order by id asc
	     ]]>
    </select>
    
    <select id="getTrendUnExcuteGameControlEvents" resultMap="GameControlEventResult">
    <!-- 	select <include refid="gameControlEventColumns" />   	
        from (select ID ,LOTTERYID ,
	        	START_ISSUE_CODE ,
	        	END_ISSUE_CODE ,
	        	SALE_START_TIME ,
	        	SALE_END_TIME ,
	        	STATUS ,
	        	CREATE_TIME ,
	        	UPDATE_TIME ,
	        	ENENT_TYPE,
	        	WARN_ISSUE_ID,
	        	MESSAGE,
	        	CREATOR,
	        	PARAMS,
                row_number() over(partition by END_ISSUE_CODE order by START_ISSUE_CODE) as seq
                from game_control_event WHERE status = 0 and LOTTERYID = #{lotteryId} )
       where seq = 1  -->
        select <include refid="gameControlEventColumns" />   
		  from (select rownum as rn, a.*
              from (select *
		          from game_control_event
		         WHERE status = 0
		           and LOTTERYID = #{lotteryId}
		           <if test="isDependent==1">
		              and end_issue_code=#{realLotteryId}
		           </if>
		           <if test="isDependent==0">
		              and end_issue_code not in(99106,99111,99114,99305,99201,99101,99103,99304,99112,99306,99602,99603,99307)
		           </if> 
		           <!-- 分分彩只处理30分钟内的任务 -->
		           <if test="isDependent==1 and (realLotteryId==99111 or realLotteryId==99114)">
		              and sale_end_time<![CDATA[>]]>(sysdate-2/24)
		           </if>
		         order by start_issue_code asc, id asc) a ) b
		 where b.rn <![CDATA[<]]> 100
    </select> 
    <select id="getIssueEndUnExecGameControlEvents" resultMap="GameControlEventResult"> 
       select <include refid="gameControlEventColumns" />   
       from (
       select * 
       from game_control_event 
       WHERE status = 0 and LOTTERYID = #{lotteryId}
       <if test="isDependent==1">
       		and end_issue_code=#{realLotteryId}
       </if>
       <if test="isDependent==0"> 	 	
       		and end_issue_code not in(99106,99111,99114,99305,99201,99101,99103,99304,99602,99603,99307)
       </if> 
       order by id asc) a 
       where ROWNUM <![CDATA[<]]> 100 
    </select> 
    <select id="getSameEventUnexecByLotteryIdAndIssueCode" resultMap="GameControlEventResult">
    	select <include refid="gameControlEventColumns" /> 
	     from GAME_CONTROL_EVENT 
	    where lotteryid=#{lotteryId} 
	      and start_issue_code=#{issueCode}  
	      and status=0
	      and rownum=1
	     order by id asc
    </select>
    <select id="getSameEventUnexecByLotteryIdAndIssueCodeTrend" resultMap="GameControlEventResult">
    	select <include refid="gameControlEventColumns" /> 
	     from GAME_CONTROL_EVENT 
	    where lotteryid=#{lotteryId} 
	      and start_issue_code=#{issueCode}  
	      and end_issue_code=#{realLotteryId} 
	      and status=0
	      and rownum=1
	     order by id asc
    </select>
    <select id="getUnexecByLotteryIdAndIssueCodeAndEventType" resultMap="GameControlEventResult">
    	select <include refid="gameControlEventColumns" /> 
	     from GAME_CONTROL_EVENT 
	    where lotteryid=#{lotteryId} 
	      and start_issue_code=#{issueCode}
	      and end_issue_code=#{realLotteryId}
	      and enent_type=#{eventType}  
	      and status=0
	      and rownum=1
    </select>
    
    <update id="updateTaskStatusDone" >
	        UPDATE GAME_CONTROL_EVENT SET
		        STATUS =2 ,UPDATE_TIME =#{updateTime}
	        WHERE 
		        ID = #{id} 
    </update>
    
        <update id="updateTaskStatusDoing" >
	        UPDATE GAME_CONTROL_EVENT SET
		        STATUS =1,UPDATE_TIME =#{updateTime}
	        WHERE 
		        ID = #{id} 
    </update>
    
    <update id="updateTaskStatusFail" >
	        UPDATE GAME_CONTROL_EVENT SET
		        STATUS =3,UPDATE_TIME =#{updateTime}
	        WHERE 
		        ID = #{id} 
    </update>
    
    <update id="updateTaskStatusUndo" >
	        UPDATE GAME_CONTROL_EVENT SET
		        STATUS =0,UPDATE_TIME =#{updateTime}
	        WHERE 
		        ID = #{id} 
    </update>

	<update id="updateTrendTaskStatusNotCare">
	        UPDATE GAME_CONTROL_EVENT SET
		        STATUS =4,UPDATE_TIME =#{updateTime}
	        WHERE 
		       
				START_ISSUE_CODE > #{issueCode}

				and END_ISSUE_CODE = #{lotteryId}
				and enent_type =18
				and status = 0
			
    </update>
    
    <select id="checkTreadTaskExisted" resultType="int">
    	select 1
	    from GAME_CONTROL_EVENT 
	    where status=0 and END_ISSUE_CODE=#{lotteryId} and enent_type =18 and ROWNUM=1 
    </select>
    
    
    <select id="getUnExecEventsByEventTypeAndLotteryId" resultMap="GameControlEventResult">
    	SELECT 
    	<include refid="gameControlEventColumns" /> 
	    FROM GAME_CONTROL_EVENT 
	    <where>
		   	STATUS=0
		    AND ENENT_TYPE=#{eventType}
			<if test="@Ognl@isNotEmpty(lotteryId)">
				AND LOTTERYID=#{lotteryId} 
			</if>
	    </where>
    </select>
    
    <select id="getInitExcuteEventsByEventTypeAndLotteryId" resultMap="GameControlEventResult">
    	SELECT 
    	<include refid="gameControlEventColumns" /> 
	    FROM GAME_CONTROL_EVENT 
	    <where>
		   	STATUS=-1
		    AND ENENT_TYPE=#{eventType}
			<if test="@Ognl@isNotEmpty(lotteryId)">
				AND LOTTERYID=#{lotteryId} 
			</if>
	    </where>
    </select>
    
</mapper>
