<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.winterframework.firefrog.fund.dao.vo.FundBank">
	<resultMap id="FundBankResult" type="com.winterframework.firefrog.fund.dao.vo.FundBank">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="fundBankColumns">
	    <![CDATA[
	        	ID as id,
	        	LOGO as logo,
	        	NAME as name,
	        	CODE as code,
	        	URL as url,
	        	IN_USE as inUse,
	        	DEPOSIT as deposit,
	        	WITHDRAW as withdraw,
	        	BIND as bind,
	        	MOWNECUM_ID as mownecumId,
	        	UPLIMIT as uplimit,
	        	LOWLIMIT as lowlimit,
	        	VIPUPLIMIT as vipuplimit,
	        	VIPLOWLIMIT as viplowlimit,
	        	RTN_MIN as rtnMin,
	        	RTN_STRUC as rtnStruc,
	        	RTN_SET as rtnSet
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.winterframework.firefrog.fund.dao.vo.FundBank" 
			useGeneratedKeys="false" keyProperty="id" 
		 flushCache="true">
		   	     	<selectKey resultType="long" order="BEFORE" keyProperty="id">
						     SELECT   SEQ_FUND_BANK_ID.Nextval from dual
			   	    </selectKey>
			   	    
	    <![CDATA[
	        INSERT INTO
	        FUND_BANK (
	        	ID ,
	        	LOGO ,
	        	NAME ,
	        	CODE ,
	        	URL ,
	        	IN_USE ,
	        	DEPOSIT ,
	        	WITHDRAW ,
	        	BIND ,
	        	MOWNECUM_ID ,
	        	UPLIMIT ,
	        	LOWLIMIT ,
	        	VIPUPLIMIT ,
	        	VIPLOWLIMIT ,
	        	RTN_MIN ,
	        	RTN_STRUC ,
	        	RTN_SET 
	        ) VALUES (
	        	#{id,javaType=long,jdbcType=DECIMAL} ,
	        	#{logo,javaType=string,jdbcType=VARCHAR} ,
	        	#{name,javaType=string,jdbcType=VARCHAR} ,
	        	#{code,javaType=string,jdbcType=VARCHAR} ,
	        	#{url,javaType=string,jdbcType=VARCHAR} ,
	        	#{inUse,javaType=long,jdbcType=DECIMAL} ,
	        	#{deposit,javaType=long,jdbcType=DECIMAL} ,
	        	#{withdraw,javaType=long,jdbcType=DECIMAL} ,
	        	#{bind,javaType=long,jdbcType=DECIMAL} ,
	        	#{mownecumId,javaType=long,jdbcType=DECIMAL} ,
	        	#{uplimit,javaType=long,jdbcType=DECIMAL} ,
	        	#{lowlimit,javaType=long,jdbcType=DECIMAL} ,
	        	#{vipuplimit,javaType=long,jdbcType=DECIMAL} ,
	        	#{viplowlimit,javaType=long,jdbcType=DECIMAL} ,
	        	#{rtnMin,javaType=long,jdbcType=DECIMAL} ,
	        	#{rtnStruc,javaType=string,jdbcType=VARCHAR} ,
	        	#{rtnSet,javaType=long,jdbcType=DECIMAL} 
	        )
	    ]]>	
	
		</insert>
	    
		<update id="update" parameterType="com.winterframework.firefrog.fund.dao.vo.FundBank">
	    <![CDATA[
	        UPDATE FUND_BANK SET
		        LOGO = #{logo,javaType=string,jdbcType=VARCHAR} ,
		        NAME = #{name,javaType=string,jdbcType=VARCHAR} ,
		        CODE = #{code,javaType=string,jdbcType=VARCHAR} ,
		        URL = #{url,javaType=string,jdbcType=VARCHAR} ,
		        IN_USE = #{inUse,javaType=long,jdbcType=DECIMAL} ,
		        DEPOSIT = #{deposit,javaType=long,jdbcType=DECIMAL} ,
		        WITHDRAW = #{withdraw,javaType=long,jdbcType=DECIMAL} ,
		        BIND = #{bind,javaType=long,jdbcType=DECIMAL} ,
		        MOWNECUM_ID = #{mownecumId,javaType=long,jdbcType=DECIMAL} ,
		        UPLIMIT = #{uplimit,javaType=long,jdbcType=DECIMAL} ,
		        LOWLIMIT = #{lowlimit,javaType=long,jdbcType=DECIMAL} ,
		        VIPUPLIMIT = #{vipuplimit,javaType=long,jdbcType=DECIMAL} ,
		        VIPLOWLIMIT = #{viplowlimit,javaType=long,jdbcType=DECIMAL} ,
		        RTN_MIN = #{rtnMin,javaType=long,jdbcType=DECIMAL} ,
		        RTN_STRUC = #{rtnStruc,javaType=string,jdbcType=VARCHAR} ,
		        RTN_SET = #{rtnSet,javaType=long,jdbcType=DECIMAL} 
	        WHERE 
		        ID = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from FUND_BANK where
		        ID = #{id} 
	    ]]>
	    </delete>   
	    <select id="getById" parameterType="long" resultMap="FundBankResult" flushCache="false">
			select <include refid="fundBankColumns" />
		    <![CDATA[
			    from FUND_BANK 
		        where 
		        ID = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="FundBankResult" flushCache="false">
			select <include refid="fundBankColumns" />
			    from FUND_BANK 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	

	<sql id="fundBankDynamicWhere">
		<!-- ognl访问静态方法的表达式 为class org.apache.maven.project.MavenProjectmethod(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="@Ognl@isNotEmpty(id)">
				and ID = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(logo)">
				and LOGO = #{logo}
			</if>
	       <if test="@Ognl@isNotEmpty(name)">
				and NAME = #{name}
			</if>
	       <if test="@Ognl@isNotEmpty(code)">
				and CODE = #{code}
			</if>
	       <if test="@Ognl@isNotEmpty(url)">
				and URL = #{url}
			</if>
	       <if test="@Ognl@isNotEmpty(inUse)">
				and IN_USE = #{inUse}
			</if>
	       <if test="@Ognl@isNotEmpty(deposit)">
				and DEPOSIT = #{deposit}
			</if>
	       <if test="@Ognl@isNotEmpty(withdraw)">
				and WITHDRAW = #{withdraw}
			</if>
	       <if test="@Ognl@isNotEmpty(bind)">
				and BIND = #{bind}
			</if>
	       <if test="@Ognl@isNotEmpty(mownecumId)">
				and MOWNECUM_ID = #{mownecumId}
			</if>
	       <if test="@Ognl@isNotEmpty(uplimit)">
				and UPLIMIT = #{uplimit}
			</if>
	       <if test="@Ognl@isNotEmpty(lowlimit)">
				and LOWLIMIT = #{lowlimit}
			</if>
	       <if test="@Ognl@isNotEmpty(vipuplimit)">
				and VIPUPLIMIT = #{vipuplimit}
			</if>
	       <if test="@Ognl@isNotEmpty(viplowlimit)">
				and VIPLOWLIMIT = #{viplowlimit}
			</if>
	       <if test="@Ognl@isNotEmpty(rtnMin)">
				and RTN_MIN = #{rtnMin}
			</if>
	       <if test="@Ognl@isNotEmpty(rtnStruc)">
				and RTN_STRUC = #{rtnStruc}
			</if>
	       <if test="@Ognl@isNotEmpty(rtnSet)">
				and RTN_SET = #{rtnSet}
			</if>
		</where>
	</sql>
	
	<select id="getAll" resultMap="FundBankResult"  flushCache="false">
    	select <include refid="fundBankColumns" />
	    from FUND_BANK 

		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>	
	<select id="getCount" resultType="long">
        select count(*) from FUND_BANK 
    </select>
    <select id="getCountByPage" resultType="long">
        select count(*) from FUND_BANK 
		<include refid="fundBankDynamicWhere"/>    
    </select>
    
    <select id="getFundBankAll" resultMap="FundBankResult" flushCache="false" parameterType="hashmap">
    	select <include refid="fundBankColumns" />
	    from FUND_BANK 

		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="getByPage" resultMap="FundBankResult">
    	select <include refid="fundBankColumns" />
	    from FUND_BANK 
		<include refid="fundBankDynamicWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>
