<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.winterframework.firefrog.game.dao.vo.GameTrendIssue">
	<resultMap id="GameTrendIssueResult" type="com.winterframework.firefrog.game.dao.vo.GameTrendIssue">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="gameTrendIssueColumns">
	    <![CDATA[
	        	ID as id,
	        	LOTTERYID as lotteryid,
	        	ISSUE_CODE as issueCode,
	        	WEB_ISSUE_CODE as webIssueCode,
	        	NUMBER_RECORD as numberRecord,
	        	MAX_OMIT as maxOmit,
	        	WEB_MAX_OMIT as webMaxOmit,
	        	CREATE_TIME as createTime, 
	        	UPDATE_TIME	as updateTime
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.winterframework.firefrog.game.dao.vo.GameTrendIssue" 
			useGeneratedKeys="false" keyProperty="id" 
		 flushCache="true">
		 <selectKey resultType="long" order="BEFORE" keyProperty="id">
				SELECT SEQ_GAME_TREND_ISSUE_ID.Nextval from dual
		</selectKey> 
	        INSERT INTO
	        GAME_TREND_ISSUE (
	        	ID ,
	        	LOTTERYID ,
	        	ISSUE_CODE ,
	        	WEB_ISSUE_CODE ,
	        	NUMBER_RECORD ,
	        	MAX_OMIT ,
	        	WEB_MAX_OMIT ,
	        	CREATE_TIME
	        ) VALUES (
	        	#{id,javaType=long,jdbcType=DECIMAL} ,
	        	#{lotteryid,javaType=long,jdbcType=DECIMAL} ,
	        	#{issueCode,javaType=long,jdbcType=DECIMAL} ,
	        	#{webIssueCode,javaType=string,jdbcType=VARCHAR} ,
	        	#{numberRecord,javaType=string,jdbcType=VARCHAR} ,
	        	#{maxOmit,javaType=string,jdbcType=VARCHAR} ,
	        	#{webMaxOmit,javaType=string,jdbcType=VARCHAR} ,
	        	#{createTime,javaType=date,jdbcType=TIMESTAMP}
	        ) 
		</insert>
	    
		<update id="update" parameterType="com.winterframework.firefrog.game.dao.vo.GameTrendIssue"> 
	        UPDATE GAME_TREND_ISSUE SET
		        LOTTERYID = #{lotteryid,javaType=long,jdbcType=DECIMAL} ,
		        ISSUE_CODE = #{issueCode,javaType=long,jdbcType=DECIMAL} ,
		        WEB_ISSUE_CODE = #{webIssueCode,javaType=string,jdbcType=VARCHAR} ,
		        NUMBER_RECORD = #{numberRecord,javaType=string,jdbcType=VARCHAR} ,
		        MAX_OMIT = #{maxOmit,javaType=string,jdbcType=VARCHAR} ,
		        WEB_MAX_OMIT = #{webMaxOmit,javaType=string,jdbcType=TIMESTAMP} ,
		        UPDATE_TIME = #{updateTime,javaType=date,jdbcType=DECIMAL} 
		     WHERE ID=#{id}  
		</update>
	    <delete id="delete" parameterType="java.lang.Long"> 
	        delete from GAME_TREND_ISSUE where ID = #{id}  
	    </delete>    
	    <select id="getById" parameterType="long" resultMap="GameTrendIssueResult" flushCache="false">
		   select <include refid="gameTrendIssueColumns" /> 
		     from GAME_TREND_ISSUE 
	        where ID = #{id}  
		</select>	 
	<sql id="gameTrendIssueDynamicWhere">
		<!-- ognl访问静态方法的表达式 为class org.apache.maven.project.MavenProjectmethod(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="@Ognl@isNotEmpty(id)">
				and ID = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(lotteryid)">
				and LOTTERYID = #{lotteryid}
			</if>
	       <if test="@Ognl@isNotEmpty(issueCode)">
				and ISSUE_CODE = #{issueCode}
			</if>
	       <if test="@Ognl@isNotEmpty(webIssueCode)">
				and WEB_ISSUE_CODE = #{webIssueCode}
			</if> 
		</where>
	</sql>
	
	<select id="getAll" resultMap="GameTrendIssueResult"  flushCache="false">
    	select <include refid="gameTrendIssueColumns" />
	    from GAME_TREND_ISSUE  
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    <select id="getByLotteryIdAndIssueCode" resultMap="GameTrendIssueResult"  flushCache="false">
    	select <include refid="gameTrendIssueColumns" /> 
	    from GAME_TREND_ISSUE 
	    where LOTTERYID = #{lotteryId} and ISSUE_CODE = #{issueCode}
    </select>
      
    <select id="getCountByPage" resultType="long">
        select count(1) from GAME_TREND_ISSUE 
		<include refid="gameTrendIssueDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="getByPage" resultMap="GameTrendIssueResult">
    	select <include refid="gameTrendIssueColumns" />
	    from GAME_TREND_ISSUE 
		<include refid="gameTrendIssueDynamicWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select> 
</mapper>
