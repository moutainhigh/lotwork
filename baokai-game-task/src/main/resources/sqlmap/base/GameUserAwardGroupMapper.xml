<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.winterframework.firefrog.game.dao.vo.GameUserAwardGroup">
	<resultMap id="GameUserAwardGroupResult" type="com.winterframework.firefrog.game.dao.vo.GameUserAwardGroup">
	</resultMap>
	<resultMap id="GameBetAwardGroupResult" type="com.winterframework.firefrog.game.dao.vo.GameBetAwardGroup">
	</resultMap>
	<resultMap id="userMap" type="java.util.HashMap">
	</resultMap>
	<!-- 用于select查询公用抽取的列 -->
	<sql id="gameUserAwardGroupColumns">
	    <![CDATA[
	        	ID 					as id,
	        	LOTTERYID 			as lotteryId,
	        	DIRECT_RET 			as directRet,
	        	THREEONE_RET 		as threeoneRet,
	        	CREATE_TIME 		as createTime,
	        	UPDATE_TIME 		as updateTime,
	        	USERID 				as userid,
	        	SET_TYPE 			as setType,
	        	STATUS 				as status,
	        	BET_TYPE 			as betType,  
	        	SYS_AWARD_GROUP_ID  as sysGroupAwardId,
	        	SUPER_RET 			as superRet,
	        	LHC_YEAR 			as lhcYear,
	        	LHC_COLOR 			as lhcColor,
	        	LHC_FLATCODE		as lhcFlatcode,
				LHC_HALFWAVE        as lhcHalfwave,
				LHC_ONEYEAR         as lhcOneyear,
				LHC_NOTIN           as lhcNotin,
				LHC_CONTINUEIN23    as lhcContinuein23,
				LHC_CONTINUEIN4     as lhcContinuein4,
				LHC_CONTINUEIN5     as lhcContinuein5,
				LHC_CONTINUENOTIN23 as lhcContinuenotin23,
				LHC_CONTINUENOTIN4  as lhcContinuenotin4,
				LHC_CONTINUENOTIN5  as lhcContinuenotin5,
				LHC_CONTINUECODE    as lhcContinuecode
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.winterframework.firefrog.game.dao.vo.GameUserAwardGroup" 
			useGeneratedKeys="false" keyProperty="id" 
		 flushCache="true">
		 <selectKey resultType="long" order="BEFORE" keyProperty="id">
				SELECT   SEQ_GAME_AWARD_USER_GROUP_ID.Nextval from dual
		 </selectKey>
	    <![CDATA[
	        INSERT INTO
	        GAME_AWARD_USER_GROUP (
	        	ID ,
	        	LOTTERYID ,
	        	DIRECT_RET ,
	        	THREEONE_RET ,
	        	CREATE_TIME ,
	        	UPDATE_TIME ,
	        	USERID ,
	        	SET_TYPE ,
	        	STATUS ,
	        	BET_TYPE ,
	        	SYS_AWARD_GROUP_ID ,
	        	SUPER_RET ,
	        	LHC_YEAR ,
	        	LHC_COLOR,
				LHC_FLATCODE,		
				LHC_HALFWAVE,        
				LHC_ONEYEAR,         
				LHC_NOTIN,           
				LHC_CONTINUEIN23,    
				LHC_CONTINUEIN4,     
				LHC_CONTINUEIN5,     
				LHC_CONTINUENOTIN23, 
				LHC_CONTINUENOTIN4,  
				LHC_CONTINUENOTIN5,  
				LHC_CONTINUECODE    
	        ) VALUES (
	        	#{id,javaType=long,jdbcType=DECIMAL} ,
	        	#{lotteryid,javaType=long,jdbcType=DECIMAL} ,
	        	#{directRet,javaType=int,jdbcType=DECIMAL} ,
	        	#{threeoneRet,javaType=int,jdbcType=DECIMAL} ,
	        	#{createTime,javaType=date,jdbcType=TIMESTAMP} ,
	        	#{updateTime,javaType=date,jdbcType=TIMESTAMP} ,
	        	#{userid,javaType=long,jdbcType=DECIMAL} ,
	        	#{setType,javaType=int,jdbcType=DECIMAL} ,
	        	#{status,javaType=int,jdbcType=DECIMAL} ,
	        	#{betType,javaType=int,jdbcType=DECIMAL} ,
	        	#{sysGroupAwardId,javaType=long,jdbcType=DECIMAL} ,
	        	#{superRet,javaType=int,jdbcType=DECIMAL} ,
	        	#{lhcYear,javaType=int,jdbcType=DECIMAL} ,
	        	#{lhcColor,javaType=int,jdbcType=DECIMAL},
	        	#{lhcFlatcode,javaType=long,jdbcType=DECIMAL} ,       
				#{lhcHalfwave,javaType=long,jdbcType=DECIMAL} ,       
				#{lhcOneyear,javaType=long,jdbcType=DECIMAL} ,        
				#{lhcNotin,javaType=long,jdbcType=DECIMAL} ,          
				#{lhcContinuein23,javaType=long,jdbcType=DECIMAL} ,   
				#{lhcContinuein4,javaType=long,jdbcType=DECIMAL} ,    
				#{lhcContinuein5,javaType=long,jdbcType=DECIMAL} ,    
				#{lhcContinuenotin23,javaType=long,jdbcType=DECIMAL} ,
				#{lhcContinuenotin4,javaType=long,jdbcType=DECIMAL} , 
				#{lhcContinuenotin5,javaType=long,jdbcType=DECIMAL} , 
				#{lhcContinuecode,javaType=long,jdbcType=DECIMAL}   
	        )
	    ]]>	
	
		</insert>
	    
		<update id="update" parameterType="com.winterframework.firefrog.game.dao.vo.GameUserAwardGroup">
	    <![CDATA[
	        UPDATE GAME_AWARD_USER_GROUP SET
		        LOTTERYID = #{lotteryid,javaType=long,jdbcType=DECIMAL} ,
		        DIRECT_RET = #{directRet,javaType=int,jdbcType=DECIMAL} ,
		        THREEONE_RET = #{threeoneRet,javaType=int,jdbcType=DECIMAL} ,
		        SUPER_RET = #{superRet,javaType=int,jdbcType=DECIMAL} ,
		        CREATE_TIME = #{createTime,javaType=date,jdbcType=TIMESTAMP} ,
		        UPDATE_TIME = #{updateTime,javaType=date,jdbcType=TIMESTAMP} ,
		        USERID = #{userid,javaType=long,jdbcType=DECIMAL} ,
		        SET_TYPE = #{setType,javaType=int,jdbcType=DECIMAL} ,
		        STATUS = #{status,javaType=int,jdbcType=DECIMAL} ,
		        BET_TYPE = #{betType,javaType=int,jdbcType=DECIMAL} ,
		        SYS_AWARD_GROUP_ID = #{sysGroupAwardId,javaType=long,jdbcType=DECIMAL}
	        WHERE 
		        ID = #{id} 
	    ]]>
		</update>
		
		<update id="updateRet" parameterType="com.winterframework.firefrog.game.dao.vo.GameUserAwardGroup">
	    <![CDATA[
	        UPDATE GAME_AWARD_USER_GROUP SET
		        DIRECT_RET = #{directRet,javaType=int,jdbcType=DECIMAL} ,
		        THREEONE_RET = #{threeoneRet,javaType=int,jdbcType=DECIMAL} ,
		        SUPER_RET = #{superRet,javaType=int,jdbcType=DECIMAL} ,
		        STATUS = #{status,javaType=int,jdbcType=DECIMAL}
	        WHERE 
		        LOTTERYID = #{lotteryid} and
		        USERID = #{userid}
	    ]]>
		</update>
		
		<update id="updateUserAwardGroup" parameterType="com.winterframework.firefrog.game.dao.vo.GameUserAwardGroup">
	    <![CDATA[
	       UPDATE GAME_AWARD_USER_GROUP SET
		        DIRECT_RET = #{directRet,javaType=int,jdbcType=DECIMAL} ,
		        THREEONE_RET = #{threeoneRet,javaType=int,jdbcType=DECIMAL} ,
		        SUPER_RET = #{superRet,javaType=int,jdbcType=DECIMAL} ,
		        CREATE_TIME = #{createTime,javaType=date,jdbcType=TIMESTAMP} ,
		        UPDATE_TIME = #{updateTime,javaType=date,jdbcType=TIMESTAMP} ,
		        SET_TYPE = #{setType,javaType=int,jdbcType=DECIMAL} ,
		        STATUS = #{status,javaType=int,jdbcType=DECIMAL} ,
		        BET_TYPE = #{betType,javaType=int,jdbcType=DECIMAL}
	        WHERE 
		        LOTTERYID = #{lotteryid} and
		        USERID = #{userid}
	    ]]>
		</update>
		
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from GAME_AWARD_USER_GROUP where
		        ID = #{id} 
	    ]]>
	    </delete>   
	    <select id="getById" parameterType="long" resultMap="GameUserAwardGroupResult" flushCache="false">
			select <include refid="gameUserAwardGroupColumns" />
		    <![CDATA[
			    from GAME_AWARD_USER_GROUP 
		        where 
		        ID = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="GameUserAwardGroupResult" flushCache="false">
			select <include refid="gameUserAwardGroupColumns" />
			    from GAME_AWARD_USER_GROUP 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
		
		<select id="getGameUserAwardGroupByUserId" parameterType="long" resultMap="GameUserAwardGroupResult" flushCache="false">
			select <include refid="gameUserAwardGroupColumns" />
		    <![CDATA[
			    from GAME_AWARD_USER_GROUP 
		        where 
		        USERID = #{userid} 
		    ]]>
		</select>	
		
		<select id="getGameUserAwardGroupByUserIdAndLotteryIds" parameterType="hashmap" resultMap="GameUserAwardGroupResult" flushCache="false">
		    select <include refid="gameUserAwardGroupColumns" />
		    <![CDATA[
		    ,( select G.AWARD_NAME  from GAME_AWARD_GROUP G where  G.ID = T.SYS_AWARD_GROUP_ID) as awardName
			    from GAME_AWARD_USER_GROUP T
		        where 
		        USERID = #{userid}  and T.lotteryid in ( #{lotteryid} ) 
		    ]]>
		</select>

	<sql id="gameUserAwardGroupDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="@Ognl@isNotEmpty(id)">
				and ID = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(lotterySeriesCode)">
				and LOTTERYID = #{lotteryId}
			</if>
	       <if test="@Ognl@isNotEmpty(directRet)">
				and DIRECT_RET = #{directRet}
			</if>
	       <if test="@Ognl@isNotEmpty(threeoneRet)">
				and THREEONE_RET = #{threeoneRet}
			</if>
			<if test="@Ognl@isNotEmpty(superRet)">
				and SUPER_RET = #{superRet}
			</if>
	       <if test="@Ognl@isNotEmpty(createTime)">
				and CREATE_TIME = #{createTime}
			</if>
	       <if test="@Ognl@isNotEmpty(updateTime)">
				and UPDATE_TIME = #{updateTime}
			</if>
	       <if test="@Ognl@isNotEmpty(userid)">
				and USERID = #{userid}
			</if>
	       <if test="@Ognl@isNotEmpty(setType)">
				and SET_TYPE = #{setType}
			</if>
	       <if test="@Ognl@isNotEmpty(status)">
				and STATUS = #{status}
			</if>
		   <if test="@Ognl@isNotEmpty(betType)">
				and BET_TYPE = #{betType}
			</if>
		</where>
	</sql>
	
	<select id="getAll" resultMap="GameUserAwardGroupResult"  flushCache="false">
    	select <include refid="gameUserAwardGroupColumns" />
	    from GAME_AWARD_USER_GROUP 

		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>	
	<select id="getCount" resultType="long">
        select count(*) from GAME_AWARD_USER_GROUP 
    </select>
    <select id="getCountByPage" resultType="long">
        select count(*) from GAME_AWARD_USER_GROUP 
		<include refid="gameUserAwardGroupDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="getByPage" resultMap="GameUserAwardGroupResult">
    	select <include refid="gameUserAwardGroupColumns" />
	    from GAME_AWARD_USER_GROUP 
		<include refid="gameUserAwardGroupDynamicWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    <select id="getGameUserAwardGroupByUserIdAndLotteryId" parameterType="hashmap" resultMap="GameUserAwardGroupResult" >
    select <include refid="gameUserAwardGroupColumns" />
	    from GAME_AWARD_USER_GROUP 
	    where LOTTERYID=#{lotteryId} and userid=#{userId} and status=1 and BET_TYPE=1
    </select>

	<select id="queryUsedAwardGroupUserSum" parameterType="hashmap" resultType="int">
	<![CDATA[
		select COUNT(userid)
		  from GAME_AWARD_USER_GROUP
		 where LOTTERYID = #{lotteryId}
		   and userid in
		       (select ID
		          from USER_CUSTOMER
		         where USER_CHAIN like
		               (select USER_CHAIN from USER_CUSTOMER t where t.id = #{userid})||'%')
	]]>
	</select>
	
	<select id="getGameBetAwardGroupByUserId" parameterType="long" resultMap="GameBetAwardGroupResult" flushCache="false">
		  select t2.lotteryid as lotteryid,
		  		t1.bet_type as betType,
		  		t1.id as awardGroupid
		   from GAME_AWARD_USER_GROUP t1, GAME_SERIES t2
		   where t1.USERID = #{userid} 
		     and t1.bet_type = 1
		     order by t2.lotteryid
	</select>
	
	<select id="getGameBetAwardGroupByUserIdAndLotteryid" parameterType="hashmap" resultMap="GameBetAwardGroupResult" flushCache="false">
		  select t2.lotteryid as lotteryid,
		  		t2.lottery_series_code as lotterySeriesCode,
		  		t1.bet_type as betType,
		  		t1.id as awardGroupid
		   from GAME_AWARD_USER_GROUP t1, GAME_SERIES t2
		   where t1.USERID = #{userid} and t2.lotteryid = #{lotteryid}
		     and t2.lotteryid = t1.lotteryid
		     order by t2.lotteryid
	</select>
	
	<select id="getGameUserAwardGroupByUserIdAndBetType" parameterType="hashmap" resultMap="GameUserAwardGroupResult" flushCache="false">
		  select <include refid="gameUserAwardGroupColumns" />
		  ,( select G.AWARD_NAME  from GAME_AWARD_GROUP G where  G.ID = T.SYS_AWARD_GROUP_ID) as awardName
		   from GAME_AWARD_USER_GROUP T
			where userid = #{userid} 
			<if test="@Ognl@isNotEmpty(betType)">
				and BET_TYPE = #{betType}
			</if>
	</select>
	
	<select id="getAllByLotterySeriesCodeAndUserIdAndAwardName" parameterType="hashmap" resultMap="GameUserAwardGroupResult" flushCache="false">
		  select <include refid="gameUserAwardGroupColumns" />
			from GAME_AWARD_USER_GROUP
			where lottery_series_code = #{lotterySeriesCode}
			and userid = #{userid}
	</select>
	<select id="getAwardByUserIdAndLryIdAndSysAwardId" parameterType="hashmap" resultMap="GameUserAwardGroupResult" >
    	select <include refid="gameUserAwardGroupColumns" />
	    from GAME_AWARD_USER_GROUP 
	    where LOTTERYID=#{lotteryid} and SYS_AWARD_GROUP_ID=#{sysAwardGroupId} and status=1 and BET_TYPE=1 and userid in
   		<foreach item="item" index="index" collection="userIds" open="(" separator="," close=")" >
			#{item}				
		</foreach>	
    </select>
 
    <select id="getUserAwardGroupByLotteryIdAndUserId" parameterType="hashmap" resultMap="GameUserAwardGroupResult" > 
		select <include refid="gameUserAwardGroupColumns" />
		  from GAME_AWARD_USER_GROUP
		 where lotteryid = #{lotteryId}
		   and userid = #{userId} 
	</select>
	   <select id="getUserAwardGroupDirPoint" parameterType="hashmap" resultMap="userMap" >
    	select  AUG.USERID as userId, AUG.DIRECT_RET as RETVALUE
    	 from GAME_AWARD_USER_GROUP AUG where LOTTERYID=#{lotteryId} and SYS_AWARD_GROUP_ID=#{sysAwardGroupId} and USERID=#{userAwardGroupIds}
<!--    		<foreach item="item" index="index" collection="userAwardGroupIds" open="(" separator="," close=")" > -->
<!-- 			#{item}				 -->
<!-- 		</foreach>	 -->
    </select>
    <select id="getUserAwardGroupThreeOnePoint" parameterType="hashmap" resultMap="userMap" >
    	select  AUG.USERID as userId, AUG.THREEONE_RET as RETVALUE
    	 from GAME_AWARD_USER_GROUP AUG where LOTTERYID=#{lotteryId} and SYS_AWARD_GROUP_ID=#{sysAwardGroupId} and USERID =#{userAwardGroupIds}
<!--    		<foreach item="item" index="index" collection="userAwardGroupIds" open="(" separator="," close=")" > -->
<!-- 			#{item}				 -->
<!-- 		</foreach>	 -->
    </select>
    <select id="getUserAwardGroupSuperPoint" parameterType="hashmap" resultMap="userMap" >
    	select  AUG.USERID as userId, AUG.SUPER_RET as RETVALUE
    	 from GAME_AWARD_USER_GROUP AUG where LOTTERYID=#{lotteryId} and SYS_AWARD_GROUP_ID=#{sysAwardGroupId} and USERID =#{userAwardGroupIds}
<!--    		<foreach item="item" index="index" collection="userAwardGroupIds" open="(" separator="," close=")" > -->
<!-- 			#{item}				 -->
<!-- 		</foreach>	 -->
    </select>
    <select id="getUserAwardGroupSbThreeOnePoint" parameterType="hashmap" resultMap="userMap" >
    	select  AUG.USERID as userId, AUG.SB_THREE_ONE as RETVALUE
    	 from GAME_AWARD_USER_GROUP AUG where LOTTERYID=#{lotteryId} and SYS_AWARD_GROUP_ID=#{sysAwardGroupId} and USERID =#{userAwardGroupIds}
<!--    		<foreach item="item" index="index" collection="userAwardGroupIds" open="(" separator="," close=")" > -->
<!-- 			#{item}				 -->
<!-- 		</foreach>	 -->
    </select>
      <select id="getUserAwardPoint" parameterType="hashmap" resultMap="userMap" >
    	select  AUG.USERID as userId, AUG.RET_VALUE as RETVALUE
    	 from GAME_AWARD_USER AUG where status=1 and bet_type_code=#{gameBetType} and lotteryId=#{lotteryId} and USERID =#{userId}
    </select>
    
    <!-- 一代回收清除奖金组  -->
    <update id="updateGameAwardGruopBetType"
		parameterType="com.winterframework.firefrog.schedule.dto.GameAwardUserGroupDTO">
	    <![CDATA[
	    	UPDATE 
	        	GAME_AWARD_USER_GROUP 
	        SET		        
		        BET_TYPE = #{betType,javaType=int,jdbcType=DECIMAL}
	        WHERE 
		        USERID = #{userId} AND
		        LOTTERYID NOT IN (
		        	SELECT LOTTERYID FROM (
						SELECT LOTTERYID,count(0) AS COUNT FROM GAME_AWARD_USER_GROUP 
						WHERE USERID = #{userId}
						GROUP BY LOTTERYID
					)WHERE COUNT =1
		        ) 
	    ]]>
	</update>
</mapper>
