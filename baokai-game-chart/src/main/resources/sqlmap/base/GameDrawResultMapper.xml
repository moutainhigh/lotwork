<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.winterframework.firefrog.game.dao.vo.GameDrawResult">
	<resultMap id="GameDrawResultResult" type="com.winterframework.firefrog.game.dao.vo.GameDrawResult">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="gameDrawResultColumns">
	    <![CDATA[
	        	ID as id,
	        	LOTTERYID as lotteryid,
	        	ISSUE_CODE as issueCode,
	        	WEB_ISSUE_CODE as webIssueCode,
	        	NUMBER_RECORD as numberRecord,
	        	CREATE_TIME as createTime,
	        	UPDATE_TIME as updateTime
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.winterframework.firefrog.game.dao.vo.GameDrawResult" 
			useGeneratedKeys="false" keyProperty="id" 
		 flushCache="true">
		   	     	<selectKey resultType="long" order="BEFORE" keyProperty="id">
						     SELECT   SEQ_GAME_DRAW_RESULT_ID.Nextval from dual
			   	    </selectKey>
			   	    
	    <![CDATA[
	        INSERT INTO
	        GAME_DRAW_RESULT (
	        	ID ,
	        	LOTTERYID ,
	        	ISSUE_CODE ,
	        	WEB_ISSUE_CODE ,
	        	NUMBER_RECORD ,
	        	CREATE_TIME ,
	        	UPDATE_TIME 
	        ) VALUES (
	        	#{id,javaType=long,jdbcType=DECIMAL} ,
	        	#{lotteryid,javaType=long,jdbcType=DECIMAL} ,
	        	#{issueCode,javaType=long,jdbcType=DECIMAL} ,
	        	#{webIssueCode,javaType=string,jdbcType=VARCHAR} ,
	        	#{numberRecord,javaType=string,jdbcType=VARCHAR} ,
	        	#{createTime,javaType=object,jdbcType=TIMESTAMP} ,
	        	#{updateTime,javaType=object,jdbcType=TIMESTAMP} 
	        )
	    ]]>	
	
		</insert>
	    
		<update id="update" parameterType="com.winterframework.firefrog.game.dao.vo.GameDrawResult">
	    <![CDATA[
	        UPDATE GAME_DRAW_RESULT SET
		        LOTTERYID = #{lotteryid,javaType=long,jdbcType=DECIMAL} ,
		        ISSUE_CODE = #{issueCode,javaType=long,jdbcType=DECIMAL} ,
		        WEB_ISSUE_CODE = #{webIssueCode,javaType=string,jdbcType=VARCHAR} ,
		        NUMBER_RECORD = #{numberRecord,javaType=string,jdbcType=VARCHAR} ,
		        CREATE_TIME = #{createTime,javaType=object,jdbcType=TIMESTAMP} ,
		        UPDATE_TIME = #{updateTime,javaType=object,jdbcType=TIMESTAMP} 
	        WHERE 
		        ID = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from GAME_DRAW_RESULT where
		        ID = #{id} 
	    ]]>
	    </delete>   
	    <select id="getById" parameterType="long" resultMap="GameDrawResultResult" flushCache="false">
			select <include refid="gameDrawResultColumns" />
		    <![CDATA[
			    from GAME_DRAW_RESULT 
		        where 
		        ID = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="GameDrawResultResult" flushCache="false">
			select <include refid="gameDrawResultColumns" />
			    from GAME_DRAW_RESULT 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	

	<sql id="gameDrawResultDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="@Ognl@isNotEmpty(id)">
				and ID = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(lotteryid)">
				and LOTTERYID = #{lotteryid}
			</if>
	       <if test="@Ognl@isNotEmpty(issueCode)">
				and ISSUE_CODE = #{issueCode}
			</if>
	       <if test="@Ognl@isNotEmpty(webIssueCode)">
				and WEB_ISSUE_CODE = #{webIssueCode}
			</if>
	       <if test="@Ognl@isNotEmpty(numberRecord)">
				and NUMBER_RECORD = #{numberRecord}
			</if>
	       <if test="@Ognl@isNotEmpty(createTime)">
				and CREATE_TIME = #{createTime}
			</if>
	       <if test="@Ognl@isNotEmpty(updateTime)">
				and UPDATE_TIME = #{updateTime}
			</if>
		</where>
	</sql>
	
	<select id="getAll" resultMap="GameDrawResultResult"  flushCache="false">
    	select <include refid="gameDrawResultColumns" />
	    from GAME_DRAW_RESULT 

		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    <select id="currentIssueCode" parameterType="long" resultType="long" flushCache="false">
    	SELECT ISSUE_CODE FROM GAME_DRAW_RESULT T WHERE T.ID = ( SELECT MAX(ID) FROM GAME_DRAW_RESULT K WHERE K.LOTTERYID = #{lotteryId})	
	</select>
    
	<select id="getAllByLotteryId" parameterType="long"
		resultMap="GameDrawResultResult" flushCache="false">
		select <include refid="gameDrawResultColumns" />
	    from GAME_DRAW_RESULT
		where LOTTERYID = #{lotteryid}
		ORDER BY WEB_ISSUE_CODE desc
	</select>
	
	<select id="getDrawResultByDate" parameterType="hashMap" resultMap="GameDrawResultResult">
		<!-- select <include refid="gameDrawResultColumns" />
	    from GAME_DRAW_RESULT
	    where  LOTTERYID = #{lotteryid}
	    <if test="@Ognl@isNotEmpty(startDate)">
	    	<![CDATA[ and create_time >= to_date(#{startDate}, 'yyyy-MM-DD hh24:mi:ss')]]>
	    </if>
	    <if test="@Ognl@isNotEmpty(endDate)">
	    	<![CDATA[ and create_time <= to_date(#{endDate}, 'yyyy-MM-DD hh24:mi:ss')]]>
	    </if> -->
	    
	    
	    
	    
	    select <include refid="gameDrawResultColumns" /> from (select *
			          from game_draw_result t
			         where t.issue_code in (select distinct issue_code
			                                  from game_trend_jbyl
			                                 where lotteryid = #{lotteryid} and
			                                 <![CDATA[
												create_time >= to_date(#{startDate}, 'yyyy-MM-DD hh24:mi:ss') and create_time <=
												to_date(#{endDate}, 'yyyy-MM-DD hh24:mi:ss')
												]]>
			                                 )
			         )  
		    order by webIssueCode
	    
	    
	    
	</select>

	<select id="getAllByLotteryIdAndCountIssue" parameterType="hashMap"
		resultMap="GameDrawResultResult" flushCache="false">
		<!-- select * from (select <include refid="gameDrawResultColumns" />
		from GAME_DRAW_RESULT t
		where LOTTERYID = #{lotteryid}  order by ISSUE_CODE desc) where <![CDATA[ ROWNUM <= #{countIssue} ]]>
		and issueCode in (select distinct issue_code
                        from game_trend_jbyl
                       where lotteryid = #{lotteryid}) 
		order by issueCode -->
		
		select <include refid="gameDrawResultColumns" /> from (select *
			          from game_draw_result t
			         where t.issue_code in (select distinct issue_code
			                                  from game_trend_jbyl
			                                 where lotteryid = #{lotteryid})
			         order by t.WEB_ISSUE_CODE desc)  
		    where  <![CDATA[ ROWNUM <= #{countIssue} ]]>
		    order by webIssueCode
	</select>
	
	<select id="getGameDrawResultByLotteryId" parameterType="hashMap" resultMap="GameDrawResultResult" flushCache="false">
		select <include refid="gameDrawResultColumns" /> from (select <include refid="gameDrawResultColumns" />
		from GAME_DRAW_RESULT t
		where LOTTERYID = #{lotteryid}  order by WEB_ISSUE_CODE desc) where <![CDATA[ ROWNUM <= #{countIssue} ]]>
	</select>
	
	<select id="getnumberRecordByLotteryIdAndIssueCode" parameterType="HashMap"
		resultType="string" flushCache="false">
			select NUMBER_RECORD
		    from GAME_DRAW_RESULT
		    where LOTTERYID = #{lotteryid} and ISSUE_CODE = #{issueCode}
		
	</select>
	
	<select id="getNextDrawResuleByLotteryIdAndIssueCode" parameterType="HashMap"
		resultMap="GameDrawResultResult" flushCache="false">
			select <include refid="gameDrawResultColumns" /> from(
		    select * from GAME_DRAW_RESULT
		    <include refid="gameNextDrawResultDynamicWhere"/> order by WEB_ISSUE_CODE) where rownum=1
	</select>
	
	<sql id="gameNextDrawResultDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="@Ognl@isNotEmpty(lotteryid)">
				and LOTTERYID = #{lotteryid}
			</if>
	       <if test="@Ognl@isNotEmpty(issueCode)">
				and ISSUE_CODE > #{issueCode}
			</if>
		</where>
	</sql>
	
	
	<select id="getDrawResuleByLotteryIdAndIssueCode" parameterType="hashMap"
		resultMap="GameDrawResultResult" flushCache="false">
			select <include refid="gameDrawResultColumns" />
		    from GAME_DRAW_RESULT
		    where LOTTERYID = #{lotteryid} and ISSUE_CODE = #{issueCode}
	</select>
	
	<select id="getDrawResuleByLotteryId" parameterType="hashMap"
		resultMap="GameDrawResultResult" flushCache="false">
			select <include refid="gameDrawResultColumns" /> from(
		    select * from GAME_DRAW_RESULT
		    where LOTTERYID = #{lotteryid}   order by WEB_ISSUE_CODE desc) where rownum=1
	</select>
    	
	<select id="getCount" resultType="long">
        select count(*) from GAME_DRAW_RESULT 
    </select>
    <select id="getCountByPage" resultType="long">
        select count(*) from GAME_DRAW_RESULT 
		<include refid="gameDrawResultDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="getByPage" resultMap="GameDrawResultResult">
    	select <include refid="gameDrawResultColumns" />
	    from GAME_DRAW_RESULT 
		<include refid="gameDrawResultDynamicWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>
